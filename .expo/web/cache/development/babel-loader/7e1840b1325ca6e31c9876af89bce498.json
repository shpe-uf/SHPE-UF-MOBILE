{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\SHPE-UF-MOBILE\\\\Pages\\\\CodeButton.js\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Constants from \"expo-constants\";\n\nfunction CodeButton() {\n  var _this = this;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n  };\n\n  var onChange = function onChange(arg) {\n    return {\n      value: arg.nativeEvent.text\n    };\n  };\n\n  console.log(errors);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Enter code:\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref) {\n      var onChange = _ref.onChange,\n          onBlur = _ref.onBlur,\n          value = _ref.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      });\n    },\n    name: \"code\",\n    rules: {\n      required: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    style: styles.buttonInner,\n    color: true,\n    title: \"Submit\",\n    onPress: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    style: styles.buttonInner,\n    color: true,\n    title: \"Cancel\",\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n      reset({\n        code: \"\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }))), React.createElement(TouchableHighlight, {\n    style: styles.button,\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Redeem Code\")));\n}\n\nvar styles = StyleSheet.create({\n  label: {\n    color: \"white\",\n    margin: 20,\n    marginLeft: 0\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  button: {\n    marginTop: 40,\n    color: \"white\",\n    height: 40,\n    backgroundColor: \"#42A5F5\",\n    borderRadius: 20\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingTop: Constants.statusBarHeight,\n    padding: 8,\n    backgroundColor: \"#004D73\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    height: 40,\n    padding: 10,\n    borderRadius: 4\n  },\n  textStyle: {\n    padding: 8,\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  }\n});\nexport default CodeButton;","map":{"version":3,"sources":["C:/Users/hp/Desktop/SHPE-UF-MOBILE/Pages/CodeButton.js"],"names":["React","useState","useForm","Controller","Constants","CodeButton","register","setValue","handleSubmit","control","reset","errors","onSubmit","data","console","log","onChange","arg","value","nativeEvent","text","modalVisible","setModalVisible","styles","container","Alert","alert","label","onBlur","input","required","button","buttonInner","code","textStyle","StyleSheet","create","color","margin","marginLeft","modalView","backgroundColor","borderRadius","padding","alignItems","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","marginTop","flex","justifyContent","paddingTop","statusBarHeight","fontWeight","textAlign"],"mappings":"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","sourcesContent":["//import * as React from \"react\";\r\nimport React, { useState } from 'react';\r\nimport { Text, View, StyleSheet, TextInput, Button, Alert, Modal, TouchableHighlight } from \"react-native\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Constants from \"expo-constants\";\r\n\r\nfunction CodeButton() {\r\n  const {\r\n    register,\r\n    setValue,\r\n    handleSubmit,\r\n    control,\r\n    reset,\r\n    errors,\r\n  } = useForm();\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n  };\r\n\r\n  const onChange = (arg) => {\r\n    return {\r\n      value: arg.nativeEvent.text,\r\n    };\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          Alert.alert(\"Modal has been closed.\");\r\n        }}\r\n      >\r\n        <Text style={styles.label}>Enter code:</Text>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, onBlur, value }) => (\r\n            <TextInput\r\n              style={styles.input}\r\n              onBlur={onBlur}\r\n              onChangeText={(value) => onChange(value)}\r\n              value={value}\r\n            />\r\n          )}\r\n          name=\"code\"\r\n          rules={{ required: true }}\r\n        />\r\n\r\n        <View style={styles.button}>\r\n          <Button\r\n            style={styles.buttonInner}\r\n            color\r\n            title=\"Submit\"\r\n            onPress={handleSubmit(onSubmit)}\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.button}>\r\n          <Button\r\n            style={styles.buttonInner}\r\n            color\r\n            title=\"Cancel\"\r\n            onPress={() => {\r\n              setModalVisible(!modalVisible);\r\n              reset({\r\n                code: \"\",\r\n              });\r\n            }}\r\n          />\r\n        </View>\r\n      </Modal>\r\n\r\n      <TouchableHighlight\r\n        style={styles.button}\r\n        onPress={() => {\r\n          setModalVisible(true);\r\n        }}\r\n      >\r\n        <Text style={styles.textStyle}>Redeem Code</Text>\r\n      </TouchableHighlight>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  label: {\r\n    color: \"white\",\r\n    margin: 20,\r\n    marginLeft: 0,\r\n  },\r\n  modalView: {\r\n  margin: 20,\r\n  backgroundColor: \"white\",\r\n  borderRadius: 20,\r\n  padding: 35,\r\n  alignItems: \"center\",\r\n  shadowColor: \"#000\",\r\n  shadowOffset: {\r\n    width: 0,\r\n    height: 2\r\n  },\r\n  shadowOpacity: 0.25,\r\n  shadowRadius: 3.84,\r\n  elevation: 5\r\n  },\r\n  button: {\r\n    marginTop: 40,\r\n    color: \"white\",\r\n    height: 40,\r\n    backgroundColor: \"#42A5F5\",\r\n    borderRadius: 20,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    paddingTop: Constants.statusBarHeight,\r\n    padding: 8,\r\n    backgroundColor: \"#004D73\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    height: 40,\r\n    padding: 10,\r\n    borderRadius: 4,\r\n  },\r\n  textStyle: {\r\n    padding: 8,\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\"\r\n  },\r\n});\r\n\r\nexport default CodeButton;\r\n"]},"metadata":{},"sourceType":"module"}