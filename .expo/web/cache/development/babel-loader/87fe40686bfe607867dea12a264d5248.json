{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nvar _jsxFileName = \"/Users/danielcamejo/Desktop/SHPE-UF-MOBILE/assets/UserProfile.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  {\\n    getUsers {\\n      firstName\\n      lastName\\n      photo\\n      major\\n      year\\n      graduating\\n      country\\n      ethnicity\\n      sex\\n      username\\n      email\\n      createdAt\\n      points\\n      fallPoints\\n      springPoints\\n      summerPoints\\n      permission\\n      listServ\\n      classes\\n      internships\\n      socialMedia\\n      id\\n      confirmed\\n      events {\\n        name\\n        category\\n        createdAt\\n        points\\n      }\\n      classes\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TestButton from \"./TestButton\";\nimport { useForm, getErrors } from \"../util/hooks\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nfunction UserProfile(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useQuery = useQuery(FETCH_USERS_QUERY, {\n    variables: {\n      userId: \"5f90e4d4920bab09f6df0106\"\n    }\n  }),\n      data = _useQuery.data;\n\n  console.log(data);\n  return;\n  React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"./images/profileBackground.png\"),\n    style: styles.otherContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"MY PROFILE\"), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.otherInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, \"\\n\", \"INSERT PROFILE PICTURE HERE\", \"\\n\\n\\n\", \"Username: \", \"\\n\", \"Email: \", \"\\n\", \"Major: \", \"\\n\", \"Country: \", \"\\n\", \"Ethnicity: \", \"\\n\", \"Sex: \", \"\\n\", \"Member since: \", \"\\n\"))), React.createElement(TestButton, {\n    text: \"Edit Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  title: {\n    textAlignVertical: 'top',\n    paddingVertical: 30,\n    borderColor: \"#20232a\",\n    borderRadius: 6,\n    color: \"white\",\n    textAlign: \"center\",\n    fontSize: 35,\n    fontWeight: \"bold\",\n    hashTag: {\n      fontStyle: 'italic'\n    }\n  },\n  otherInfo: {\n    margin: 24,\n    color: '#4a4c4d',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 40\n  },\n  container: {\n    backgroundColor: \"#b8e5ff\",\n    paddingVertical: 5,\n    marginTop: 5\n  },\n  otherContainer: {}\n});\nvar FETCH_USERS_QUERY = gql(_templateObject());\nexport default UserProfile;","map":{"version":3,"sources":["/Users/danielcamejo/Desktop/SHPE-UF-MOBILE/assets/UserProfile.js"],"names":["React","TestButton","useForm","getErrors","useQuery","gql","UserProfile","FETCH_USERS_QUERY","variables","userId","data","console","log","require","styles","otherContainer","title","container","otherInfo","StyleSheet","create","textAlignVertical","paddingVertical","borderColor","borderRadius","color","textAlign","fontSize","fontWeight","hashTag","fontStyle","margin","lineHeight","backgroundColor","marginTop"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,OAAOC,UAAP;AACA,SAASC,OAAT,EAAkBC,SAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAGA,SAASC,WAAT,OAAgC;AAAA;;AAAA,kBACfF,QAAQ,CAACG,iBAAD,EAAoB;AACvCC,IAAAA,SAAS,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AAD4B,GAApB,CADO;AAAA,MACvBC,IADuB,aACvBA,IADuB;;AAM9BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACE;AAEE,sBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAGG,OAAO,kCAAjC;AAAqE,IAAA,KAAK,EAAGC,MAAM,CAACC,cAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,IADL,iCAEgC,QAFhC,gBAGmC,IAHnC,aAI6B,IAJ7B,aAK4B,IAL5B,eAMiC,IANjC,iBAOqC,IAPrC,WAQyB,IARzB,oBASwC,IATxC,CADJ,CAFJ,CADF,EAiBE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADJ;AAqBD;;AACD,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,KAAK,EAAC;AACJK,IAAAA,iBAAiB,EAAE,KADf;AAEJC,IAAAA,eAAe,EAAE,EAFb;AAGJC,IAAAA,WAAW,EAAE,SAHT;AAIJC,IAAAA,YAAY,EAAE,CAJV;AAKJC,IAAAA,KAAK,EAAE,OALH;AAMJC,IAAAA,SAAS,EAAE,QANP;AAOJC,IAAAA,QAAQ,EAAE,EAPN;AAQJC,IAAAA,UAAU,EAAE,MARR;AASJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAAE;AADJ;AATL,GADyB;AAc/BZ,EAAAA,SAAS,EAAE;AACTa,IAAAA,MAAM,EAAE,EADC;AAETN,IAAAA,KAAK,EAAE,SAFE;AAGTE,IAAAA,QAAQ,EAAE,EAHD;AAITC,IAAAA,UAAU,EAAE,MAJH;AAKTF,IAAAA,SAAS,EAAE,MALF;AAMTM,IAAAA,UAAU,EAAE;AANH,GAdoB;AAsB/Bf,EAAAA,SAAS,EAAE;AACTgB,IAAAA,eAAe,EAAE,SADR;AAETX,IAAAA,eAAe,EAAE,CAFR;AAGTY,IAAAA,SAAS,EAAE;AAHF,GAtBoB;AA4B/BnB,EAAAA,cAAc,EAAE;AA5Be,CAAlB,CAAf;AAiDA,IAAMR,iBAAiB,GAAGF,GAAH,mBAAvB;AAqCA,eAAeC,WAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, TouchableOpacity, Text, View, ScrollView, ImageBackground} from 'react-native';\nimport TestButton from './TestButton';\nimport { useForm, getErrors } from \"../util/hooks\";\nimport { useQuery, gql } from \"@apollo/client\";\n\n\nfunction UserProfile({/*user*/}){    //will need to pass parameters later with member object\n  const {data} = useQuery(FETCH_USERS_QUERY, {\n      variables: {\n          userId: \"5f90e4d4920bab09f6df0106\"\n      }\n  });\n  console.log(data);\n    return \n  (\n      <ScrollView>\n        <ImageBackground source ={require('./images/profileBackground.png')} style= {styles.otherContainer}>\n            <Text style={styles.title}>MY PROFILE</Text>\n            <View style={styles.container}>\n                <Text style={styles.otherInfo}>     \n                    {\"\\n\"}   \n                    INSERT PROFILE PICTURE HERE{\"\\n\\n\\n\"}\n                    Username: {/*user.username  */ \"\\n\" }\n                    Email: {/*user.email  */ \"\\n\" }\n                    Major: {/*user.major */ \"\\n\" }\n                    Country: {/*user.country  */ \"\\n\"}\n                    Ethnicity: {/*user.ethnicity  */ \"\\n\" }\n                    Sex: {/*user.sex  */ \"\\n\" }\n                    Member since: {/*user.createdAt  */ \"\\n\" }\n                </Text>\n            </View>\n        </ImageBackground>\n        <TestButton text='Edit Profile' />\n      </ScrollView>\n  )\n}\nconst styles = StyleSheet.create({\n  title:{\n    textAlignVertical: 'top',\n    paddingVertical: 30,\n    borderColor: \"#20232a\",\n    borderRadius: 6,\n    color: \"white\",\n    textAlign: \"center\",\n    fontSize: 35,\n    fontWeight: \"bold\",\n    hashTag: {\n      fontStyle: 'italic',\n    },\n  },\n  otherInfo: {\n    margin: 24,\n    color: '#4a4c4d',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 40,\n  },\n  container: {\n    backgroundColor: \"#b8e5ff\",\n    paddingVertical: 5,\n    marginTop: 5,\n    \n  },\n  otherContainer: {\n\n  }\n})\n\n/*\ncontainer: {\n    flex: 1,\n    justifyContent: 'top',\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: '#ffffff',\n    padding: 8,\n  }\n\n\n\n*/\n\n\n\n\nconst FETCH_USERS_QUERY = gql`\n  {\n    getUsers {\n      firstName\n      lastName\n      photo\n      major\n      year\n      graduating\n      country\n      ethnicity\n      sex\n      username\n      email\n      createdAt\n      points\n      fallPoints\n      springPoints\n      summerPoints\n      permission\n      listServ\n      classes\n      internships\n      socialMedia\n      id\n      confirmed\n      events {\n        name\n        category\n        createdAt\n        points\n      }\n      classes\n    }\n  }\n`;\n\nexport default UserProfile;\n"]},"metadata":{},"sourceType":"module"}