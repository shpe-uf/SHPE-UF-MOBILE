{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport var useForm = function useForm(callback) {\n  var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var onChange = function onChange(event) {\n    setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  var onSubmit = function onSubmit(event) {\n    event.preventDefault();\n    callback();\n  };\n\n  return {\n    onChange: onChange,\n    onSubmit: onSubmit,\n    values: values\n  };\n};\nexport var getErrors = function getErrors(err) {\n  errors = err.graphQLErrors[0].extensions.exception.errors;\n\n  if (errors && !errors.data) {\n    var errorString = \"\";\n    var errorArray = Object.values(errors);\n    errorArray.map(function (error) {\n      errorString += error;\n\n      if (error != errorArray[errorArray.length - 1]) {\n        errorString += \"\\n\";\n      }\n    });\n    Alert.alert(errorString);\n  }\n};","map":{"version":3,"sources":["C:/Users/hp/Desktop/SHPE-UF-MOBILE/util/hooks.js"],"names":["useState","useForm","callback","initialState","values","setValues","onChange","event","target","name","value","onSubmit","preventDefault","getErrors","err","errors","graphQLErrors","extensions","exception","data","errorString","errorArray","Object","map","error","length","Alert","alert"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAGA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,EAAiC;AAAA,MAAtBC,YAAsB,uEAAP,EAAO;;AAAA,kBAC1BH,QAAQ,CAACG,YAAD,CADkB;AAAA;AAAA,MAC/CC,MAD+C;AAAA,MACvCC,SADuC;;AAGtD,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAC1BF,IAAAA,SAAS,iCAAMD,MAAN,2BAAeG,KAAK,CAACC,MAAN,CAAaC,IAA5B,EAAmCF,KAAK,CAACC,MAAN,CAAaE,KAAhD,GAAT;AACD,GAFD;;AAIA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACJ,KAAD,EAAW;AAC1BA,IAAAA,KAAK,CAACK,cAAN;AACAV,IAAAA,QAAQ;AACT,GAHD;;AAKA,SAAO;AACLI,IAAAA,QAAQ,EAARA,QADK;AAELK,IAAAA,QAAQ,EAARA,QAFK;AAGLP,IAAAA,MAAM,EAANA;AAHK,GAAP;AAKD,CAjBM;AAmBP,OAAO,IAAMS,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD,EAAS;AAChCC,EAAAA,MAAM,GAAGD,GAAG,CAACE,aAAJ,CAAkB,CAAlB,EAAqBC,UAArB,CAAgCC,SAAhC,CAA0CH,MAAnD;;AACA,MAAIA,MAAM,IAAI,CAACA,MAAM,CAACI,IAAtB,EAA2B;AACzB,QAAIC,WAAW,GAAG,EAAlB;AAEA,QAAMC,UAAU,GAAGC,MAAM,CAAClB,MAAP,CAAcW,MAAd,CAAnB;AAEAM,IAAAA,UAAU,CAACE,GAAX,CAAe,UAAAC,KAAK,EAAI;AACtBJ,MAAAA,WAAW,IAAKI,KAAhB;;AAEA,UAAIA,KAAK,IAAIH,UAAU,CAACA,UAAU,CAACI,MAAX,GAAoB,CAArB,CAAvB,EAAgD;AAC9CL,QAAAA,WAAW,IAAI,IAAf;AACD;AACF,KAND;AAQAM,IAAAA,KAAK,CAACC,KAAN,CAAYP,WAAZ;AACD;AACF,CAjBM","sourcesContent":["import { useState } from \"react\";\r\nimport { Alert } from \"react-native\"\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const onChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    callback();\r\n  };\r\n  \r\n  return {\r\n    onChange,\r\n    onSubmit,\r\n    values\r\n  }\r\n};\r\n\r\nexport const getErrors = (err) => {\r\n  errors = err.graphQLErrors[0].extensions.exception.errors;     \r\n  if (errors && !errors.data){\r\n    var errorString = \"\";\r\n    \r\n    const errorArray = Object.values(errors);\r\n\r\n    errorArray.map(error => {\r\n      errorString += (error);\r\n\r\n      if (error != errorArray[errorArray.length - 1]) {\r\n        errorString += \"\\n\";\r\n      }\r\n    })\r\n\r\n    Alert.alert(errorString);\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}