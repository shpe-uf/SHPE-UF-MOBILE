{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\isami\\\\Desktop\\\\CompSciStuff\\\\github\\\\shpe\\\\SHPE-UF-MOBILE\\\\Pages\\\\Points.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query getUser($userId: ID!) {\\n    getUser(userId: $userId) {\\n      firstName\\n      lastName\\n      points\\n      fallPoints\\n      springPoints\\n      summerPoints\\n      fallPercentile\\n      springPercentile\\n      summerPercentile\\n      events {\\n        name\\n        category\\n        createdAt\\n        points\\n      }\\n      tasks {\\n        name\\n        points\\n        startDate\\n      }\\n      bookmarkedTasks\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PointsBar from \".././components/PointsBar\";\nimport UserEventsTable from \".././components/UserEventsTable\";\nvar user = {\n  points: 3,\n  fallPoints: 2,\n  springPoints: 1,\n  summerPoints: 0,\n  fallPercentile: \"99%\",\n  springPercentile: \"99%\",\n  summerPercentile: \"99%\",\n  events: [{\n    name: \"1st GBM Fall 2020\",\n    category: \"General Body Meeting\",\n    createdAt: \"2020-09-09T21:51:32.519Z\",\n    points: 1\n  }, {\n    name: \"2nd GBM Fall 2020\",\n    category: \"General Body Meeting\",\n    createdAt: \"2020-09-30T22:17:39.859Z\",\n    points: 1\n  }]\n};\n\nvar Points = function Points() {\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    accessibilityLabel: \"Button to redeem code.\",\n    title: \"Redeem Code\",\n    color: \"#1395b9\",\n    onPress: function onPress() {\n      return Alert.alert(\"Redeem Code button pressed.\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })), React.createElement(PointsBar, {\n    user: user,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    styles: styles.events,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"EVENTS\"), React.createElement(UserEventsTable, {\n    user: user,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: 'flex-end',\n    backgroundColor: \"#fff\",\n    width: \"80%\"\n  },\n  button: {\n    width: \"30%\",\n    marginBottom: '10px'\n  },\n  pointsBar: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n  pointsBox: {\n    backgroundColor: \"powderblue\",\n    borderColor: \"gray\",\n    textAlign: \"center\",\n    width: \"100%\",\n    padding: \"10px\",\n    margin: \"10px\"\n  },\n  events: {\n    alignItems: 'flex-start'\n  }\n});\nvar FETCH_USER_QUERY = gql(_templateObject());\nexport default Points;","map":{"version":3,"sources":["C:/Users/isami/Desktop/CompSciStuff/github/shpe/SHPE-UF-MOBILE/Pages/Points.js"],"names":["React","useContext","useState","PointsBar","UserEventsTable","user","points","fallPoints","springPoints","summerPoints","fallPercentile","springPercentile","summerPercentile","events","name","category","createdAt","Points","styles","container","button","Alert","alert","StyleSheet","create","alignItems","backgroundColor","width","marginBottom","pointsBar","flex","justifyContent","pointsBox","borderColor","textAlign","padding","margin","FETCH_USER_QUERY","gql"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Alert, Button, View, Text, StyleSheet } from \"react-native\";\r\n\r\nimport PointsBar from \".././components/PointsBar\";\r\nimport UserEventsTable from \".././components/UserEventsTable\";\r\n\r\nlet user = {\r\n  points: 3,\r\n  fallPoints: 2,\r\n  springPoints: 1,\r\n  summerPoints: 0,\r\n  fallPercentile: \"99%\",\r\n  springPercentile: \"99%\",\r\n  summerPercentile: \"99%\",\r\n  events: [\r\n    {\r\n      name: \"1st GBM Fall 2020\",\r\n      category: \"General Body Meeting\",\r\n      createdAt: \"2020-09-09T21:51:32.519Z\",\r\n      points: 1\r\n    },\r\n    {\r\n      name: \"2nd GBM Fall 2020\",\r\n      category: \"General Body Meeting\",\r\n      createdAt: \"2020-09-30T22:17:39.859Z\",\r\n      points: 1\r\n    }\r\n  ]\r\n};\r\n\r\n\r\nconst Points = () => {\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.button}>\r\n        <Button\r\n          accessibilityLabel=\"Button to redeem code.\"\r\n          title=\"Redeem Code\"\r\n          color=\"#1395b9\"\r\n          onPress={() => Alert.alert(\"Redeem Code button pressed.\")}\r\n        />\r\n      </View>\r\n      <PointsBar user={user} />\r\n      <View styles={styles.events}>\r\n        <Text>EVENTS</Text>\r\n        <UserEventsTable user={user} />\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: 'flex-end',\r\n    backgroundColor: \"#fff\",\r\n    width: \"80%\"\r\n  },\r\n  button: {\r\n    width: \"30%\",\r\n    marginBottom: '10px',\r\n  },\r\n  pointsBar: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\"\r\n  },\r\n  pointsBox: {\r\n    backgroundColor: \"powderblue\",\r\n    borderColor: \"gray\",\r\n    textAlign: \"center\",\r\n    width: \"100%\",\r\n    padding: \"10px\",\r\n    margin: \"10px\"\r\n  },\r\n  events: {\r\n    alignItems: 'flex-start'\r\n  }\r\n});\r\n\r\nconst FETCH_USER_QUERY = gql`\r\n  query getUser($userId: ID!) {\r\n    getUser(userId: $userId) {\r\n      firstName\r\n      lastName\r\n      points\r\n      fallPoints\r\n      springPoints\r\n      summerPoints\r\n      fallPercentile\r\n      springPercentile\r\n      summerPercentile\r\n      events {\r\n        name\r\n        category\r\n        createdAt\r\n        points\r\n      }\r\n      tasks {\r\n        name\r\n        points\r\n        startDate\r\n      }\r\n      bookmarkedTasks\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport default Points;\r\n"]},"metadata":{},"sourceType":"module"}