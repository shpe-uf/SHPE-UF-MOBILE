{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\SHPE-UF-MOBILE\\\\Pages\\\\TaskButton.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation redeemTasksPoints($name: String!, $username: String!) {\\n    redeemTasksPoints(\\n      redeemTasksPointsInput: { name: $name, username: $username }\\n    ) {\\n      firstName\\n      lastName\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { useMutation, gql } from \"@apollo/client\";\nimport { useForm, getErrors } from \"../util/hooks\";\nimport Constants from \"expo-constants\";\n\nfunction TaskButton(props) {\n  var taskName = props.task;\n  var user = props.user;\n\n  var _useMutation = useMutation(REDEEM_TASK_POINTS_MUTATION, {\n    update: function update(_, _ref) {\n      var userData = _ref.data.redeemTasksPoints;\n    },\n    onError: function onError(err) {\n      getErrors(err);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      redeemTasksPoints = _useMutation2[0];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableHighlight, {\n    style: styles.button,\n    onPress: function onPress() {\n      redeemTasksPoints({\n        variables: {\n          name: taskName,\n          username: user.username\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Request\")));\n}\n\nvar styles = StyleSheet.create({\n  label: {\n    color: \"black\",\n    margin: 10,\n    marginLeft: 0\n  },\n  header: {\n    color: \"#ff5400\",\n    fontSize: 30,\n    fontWeight: \"bold\",\n    fontStyle: \"italic\",\n    margin: 10,\n    marginLeft: 0\n  },\n  button: {\n    marginTop: 10,\n    marginLeft: 20,\n    marginRight: 20,\n    color: \"white\",\n    height: 40,\n    backgroundColor: \"#42A5F5\",\n    borderRadius: 20\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingTop: Constants.statusBarHeight,\n    padding: 8,\n    backgroundColor: \"#004D73\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    height: 40,\n    padding: 10,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: \"#c8c8c8\"\n  },\n  textStyle: {\n    padding: 8,\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  }\n});\nvar REDEEM_TASK_POINTS_MUTATION = gql(_templateObject());\nexport default TaskButton;","map":{"version":3,"sources":["C:/Users/hp/Desktop/SHPE-UF-MOBILE/Pages/TaskButton.js"],"names":["React","useState","useContext","useMutation","gql","useForm","getErrors","Constants","TaskButton","props","taskName","task","user","REDEEM_TASK_POINTS_MUTATION","update","_","userData","data","redeemTasksPoints","onError","err","styles","container","button","variables","name","username","textStyle","StyleSheet","create","label","color","margin","marginLeft","header","fontSize","fontWeight","fontStyle","marginTop","marginRight","height","backgroundColor","borderRadius","flex","justifyContent","paddingTop","statusBarHeight","padding","input","borderWidth","borderColor","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  Button,\r\n  Alert,\r\n  TouchableHighlight,\r\n} from \"react-native\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { useForm, getErrors } from \"../util/hooks\";\r\nimport Constants from \"expo-constants\";\r\n\r\nfunction TaskButton(props) {\r\n  let taskName = props.task;\r\n  let user = props.user;\r\n\r\n  const [redeemTasksPoints] = useMutation(REDEEM_TASK_POINTS_MUTATION, {\r\n    update(_, { data: { redeemTasksPoints: userData } }) {},\r\n\r\n    onError(err) {\r\n      getErrors(err);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableHighlight\r\n        style={styles.button}\r\n        onPress={() => {\r\n          redeemTasksPoints({\r\n            variables: { name: taskName, username: user.username },\r\n          });\r\n        }}\r\n      >\r\n        <Text style={styles.textStyle}>Request</Text>\r\n      </TouchableHighlight>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  label: {\r\n    color: \"black\",\r\n    margin: 10,\r\n    marginLeft: 0,\r\n  },\r\n  header: {\r\n    color: \"#ff5400\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    fontStyle: \"italic\",\r\n    margin: 10,\r\n    marginLeft: 0,\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n    color: \"white\",\r\n    height: 40,\r\n    backgroundColor: \"#42A5F5\",\r\n    borderRadius: 20,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    paddingTop: Constants.statusBarHeight,\r\n    padding: 8,\r\n    backgroundColor: \"#004D73\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    height: 40,\r\n    padding: 10,\r\n    borderRadius: 4,\r\n    borderWidth: 1,\r\n    borderColor: \"#c8c8c8\",\r\n  },\r\n  textStyle: {\r\n    padding: 8,\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst REDEEM_TASK_POINTS_MUTATION = gql`\r\n  mutation redeemTasksPoints($name: String!, $username: String!) {\r\n    redeemTasksPoints(\r\n      redeemTasksPointsInput: { name: $name, username: $username }\r\n    ) {\r\n      firstName\r\n      lastName\r\n    }\r\n  }\r\n`;\r\n\r\nexport default TaskButton;\r\n"]},"metadata":{},"sourceType":"module"}