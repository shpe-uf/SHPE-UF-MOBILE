{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\SHPE-UF-MOBILE\\\\Pages\\\\CodeButton.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation redeemPoints($code: String!, $username: String!) {\\n    redeemPoints(redeemPointsInput: { code: $code, username: $username }) {\\n      points\\n      fallPoints\\n      springPoints\\n      summerPoints\\n      message\\n      events {\\n        id\\n        name\\n        category\\n        createdAt\\n        points\\n      }\\n      tasks {\\n        name\\n        points\\n        createdAt\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query getUser($userId: ID!) {\\n    getUser(userId: $userId) {\\n      firstName\\n      lastName\\n      points\\n      fallPoints\\n      springPoints\\n      summerPoints\\n      fallPercentile\\n      springPercentile\\n      summerPercentile\\n      events {\\n        name\\n        category\\n        createdAt\\n        points\\n      }\\n      tasks {\\n        name\\n        points\\n        startDate\\n      }\\n      bookmarkedTasks\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\nimport { useForm, getErrors } from \"../util/hooks\";\nimport Constants from \"expo-constants\";\n\nfunction CodeButton() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      errors = _useState2[0],\n      setErrors = _useState2[1];\n\n  var _useQuery = useQuery(FETCH_USER_QUERY, {\n    variables: {\n      userId: \"5fb2faa33945aa36700adfd0\"\n    }\n  }),\n      data = _useQuery.data,\n      refetch = _useQuery.refetch;\n\n  if (data) {\n    var _user = data.getUser;\n    console.log(_user);\n  }\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  var _useForm = useForm(redeemPointsCallback, {\n    code: \"\",\n    username: \"letmein\"\n  }),\n      values = _useForm.values,\n      onChange = _useForm.onChange,\n      onSubmit = _useForm.onSubmit;\n\n  function redeemPointsCallback() {\n    redeemPoints();\n  }\n\n  var _useMutation = useMutation(REDEEM_POINTS_MUTATION, {\n    onError: function onError(err) {\n      getErrors(err);\n    },\n    update: function update(_, _ref) {\n      var userData = _ref.data.redeemPoints;\n      values.code = \"\";\n      setErrors(false);\n      setModalVisible(false);\n      updateGetUser(userData);\n    },\n    variables: values\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      redeemPoints = _useMutation2[0];\n\n  function updateGetUser(userData) {\n    user.fallPoints = userData.fallPoints;\n    user.springPoints = userData.springPoints;\n    user.summerPoints = userData.summerPoints;\n    user.events = userData.events;\n    user.tasks = userData.tasks;\n    user.message = userData.message;\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      setModalVisible(false);\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Redeem Points\"), React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Enter code:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Code...\",\n    onChange: onChange,\n    spellCheck: false,\n    autoCorrect: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableHighlight, {\n    style: styles.button,\n    onPress: function onPress() {\n      return redeemPointsCallback();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Submit\")), React.createElement(TouchableHighlight, {\n    style: styles.button,\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"Cancel\")))), React.createElement(TouchableHighlight, {\n    style: styles.button,\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Redeem Code\")));\n}\n\nvar styles = StyleSheet.create({\n  label: {\n    color: \"black\",\n    margin: 10,\n    marginLeft: 0\n  },\n  header: {\n    color: \"#ff5400\",\n    fontSize: 30,\n    fontWeight: \"bold\",\n    fontStyle: \"italic\",\n    margin: 10,\n    marginLeft: 0\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 30,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  button: {\n    marginTop: 10,\n    marginLeft: 20,\n    marginRight: 20,\n    color: \"white\",\n    height: 40,\n    backgroundColor: \"#42A5F5\",\n    borderRadius: 20\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingTop: Constants.statusBarHeight,\n    padding: 8,\n    backgroundColor: \"#004D73\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    height: 40,\n    padding: 10,\n    borderRadius: 4,\n    borderWidth: 1,\n    borderColor: \"#c8c8c8\"\n  },\n  textStyle: {\n    padding: 8,\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  }\n});\nvar FETCH_USER_QUERY = gql(_templateObject());\nvar REDEEM_POINTS_MUTATION = gql(_templateObject2());\nexport default CodeButton;","map":{"version":3,"sources":["C:/Users/hp/Desktop/SHPE-UF-MOBILE/Pages/CodeButton.js"],"names":["React","useState","useContext","useMutation","useQuery","gql","useForm","getErrors","Constants","CodeButton","errors","setErrors","FETCH_USER_QUERY","variables","userId","data","refetch","user","getUser","console","log","modalVisible","setModalVisible","redeemPointsCallback","code","username","values","onChange","onSubmit","redeemPoints","REDEEM_POINTS_MUTATION","onError","err","update","_","userData","updateGetUser","fallPoints","springPoints","summerPoints","events","tasks","message","styles","container","Alert","alert","modalView","header","label","input","button","textStyle","StyleSheet","create","color","margin","marginLeft","fontSize","fontWeight","fontStyle","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","marginTop","marginRight","flex","justifyContent","paddingTop","statusBarHeight","borderWidth","borderColor","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  Button,\r\n  Alert,\r\n  Modal,\r\n  TouchableHighlight,\r\n} from \"react-native\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { useForm, getErrors } from \"../util/hooks\";\r\nimport Constants from \"expo-constants\";\r\n\r\nfunction CodeButton() {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  let { data, refetch } = useQuery(FETCH_USER_QUERY, {\r\n    variables: {\r\n      userId: \"5fb2faa33945aa36700adfd0\",\r\n    },\r\n  });\r\n  if (data) {\r\n    let user = data.getUser;\r\n    console.log(user);\r\n  }\r\n\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  const { values, onChange, onSubmit } = useForm(redeemPointsCallback, {\r\n    code: \"\",\r\n    username: \"letmein\",\r\n  });\r\n\r\n  function redeemPointsCallback() {\r\n    redeemPoints();\r\n  }\r\n\r\n  const [redeemPoints] = useMutation(REDEEM_POINTS_MUTATION, {\r\n    onError(err) {\r\n        getErrors(err);\r\n    },\r\n    \r\n    update(_, { data: { redeemPoints: userData } }) {\r\n      values.code = \"\";\r\n      setErrors(false);\r\n      setModalVisible(false);\r\n      updateGetUser(userData);\r\n    },\r\n\r\n    variables: values,\r\n  });\r\n\r\n  function updateGetUser(userData) {\r\n    user.fallPoints = userData.fallPoints;\r\n    user.springPoints = userData.springPoints;\r\n    user.summerPoints = userData.summerPoints;\r\n    user.events = userData.events;\r\n    user.tasks = userData.tasks;\r\n    user.message = userData.message;\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          setModalVisible(false);\r\n          Alert.alert(\"Modal has been closed.\");\r\n        }}\r\n      >\r\n        <View style={styles.modalView}>\r\n          <Text style={styles.header}>Redeem Points</Text>\r\n          <Text style={styles.label}>Enter code:</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            placeholder=\"Code...\"\r\n            onChange={onChange}\r\n            spellCheck={false}\r\n            autoCorrect={false}\r\n          />\r\n          <TouchableHighlight\r\n            style={styles.button}\r\n            onPress={() => redeemPointsCallback()}\r\n          >\r\n            <Text style={styles.textStyle}>Submit</Text>\r\n          </TouchableHighlight>\r\n\r\n          <TouchableHighlight\r\n            style={styles.button}\r\n            onPress={() => {\r\n              setModalVisible(!modalVisible);\r\n            }}\r\n          >\r\n            <Text style={styles.textStyle}>Cancel</Text>\r\n          </TouchableHighlight>\r\n        </View>\r\n      </Modal>\r\n\r\n      <TouchableHighlight\r\n        style={styles.button}\r\n        onPress={() => {\r\n          setModalVisible(true);\r\n        }}\r\n      >\r\n        <Text style={styles.textStyle}>Redeem Code</Text>\r\n      </TouchableHighlight>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  label: {\r\n    color: \"black\",\r\n    margin: 10,\r\n    marginLeft: 0,\r\n  },\r\n  header: {\r\n    color: \"#ff5400\",\r\n    fontSize: 30,\r\n    fontWeight: \"bold\",\r\n    fontStyle: \"italic\",\r\n    margin: 10,\r\n    marginLeft: 0,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 30,\r\n    //alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n    color: \"white\",\r\n    height: 40,\r\n    backgroundColor: \"#42A5F5\",\r\n    borderRadius: 20,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    paddingTop: Constants.statusBarHeight,\r\n    padding: 8,\r\n    backgroundColor: \"#004D73\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    height: 40,\r\n    padding: 10,\r\n    borderRadius: 4,\r\n    borderWidth: 1,\r\n    borderColor: \"#c8c8c8\",\r\n  },\r\n  textStyle: {\r\n    padding: 8,\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst FETCH_USER_QUERY = gql`\r\n  query getUser($userId: ID!) {\r\n    getUser(userId: $userId) {\r\n      firstName\r\n      lastName\r\n      points\r\n      fallPoints\r\n      springPoints\r\n      summerPoints\r\n      fallPercentile\r\n      springPercentile\r\n      summerPercentile\r\n      events {\r\n        name\r\n        category\r\n        createdAt\r\n        points\r\n      }\r\n      tasks {\r\n        name\r\n        points\r\n        startDate\r\n      }\r\n      bookmarkedTasks\r\n    }\r\n  }\r\n`;\r\n\r\nconst REDEEM_POINTS_MUTATION = gql`\r\n  mutation redeemPoints($code: String!, $username: String!) {\r\n    redeemPoints(redeemPointsInput: { code: $code, username: $username }) {\r\n      points\r\n      fallPoints\r\n      springPoints\r\n      summerPoints\r\n      message\r\n      events {\r\n        id\r\n        name\r\n        category\r\n        createdAt\r\n        points\r\n      }\r\n      tasks {\r\n        name\r\n        points\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CodeButton;\r\n"]},"metadata":{},"sourceType":"module"}