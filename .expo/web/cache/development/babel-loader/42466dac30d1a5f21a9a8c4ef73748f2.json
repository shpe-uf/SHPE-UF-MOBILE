{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\SHPE-UF-MOBILE\\\\Pages\\\\Button.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation redeemPoints($code: String!, $username: String!) {\\n    redeemPoints(redeemPointsInput: { code: $code, username: $username }) {\\n      points\\n      fallPoints\\n      springPoints\\n      summerPoints\\n      message\\n      events {\\n        id\\n        name\\n        category\\n        createdAt\\n        points\\n      }\\n      tasks {\\n        name\\n        points\\n        createdAt\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query getUser($userId: ID!) {\\n    getUser(userId: $userId) {\\n      firstName\\n      lastName\\n      points\\n      fallPoints\\n      springPoints\\n      summerPoints\\n      fallPercentile\\n      springPercentile\\n      summerPercentile\\n      events {\\n        name\\n        category\\n        createdAt\\n        points\\n      }\\n      tasks {\\n        name\\n        points\\n        startDate\\n      }\\n      bookmarkedTasks\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from \"react\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport gql from \"graphql-tag\";\n\nfunction Button() {\n  var _this = this;\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(d) {\n    console.log(d);\n  };\n\n  console.log(\"errors\", errors);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"enter code:\"), React.createElement(Controller, {\n    name: \"code\",\n    control: control,\n    rules: {\n      required: \"This is required.\"\n    },\n    render: function render(props) {\n      return React.createElement(TextInput, _extends({}, props, {\n        onChangeText: function onChangeText(value) {\n          props.onChange(value);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    title: \"Button\",\n    onPress: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  openButton: {\n    backgroundColor: \"#004D73\",\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  },\n  input: {\n    width: 350,\n    height: 55,\n    backgroundColor: \"white\",\n    margin: 10,\n    padding: 8,\n    color: \"black\",\n    borderRadius: 14,\n    fontSize: 18,\n    fontWeight: \"500\"\n  }\n});\nvar FETCH_USER_QUERY = gql(_templateObject());\nvar REDEEM_POINTS_MUTATION = gql(_templateObject2());\nexport default Button;","map":{"version":3,"sources":["C:/Users/hp/Desktop/SHPE-UF-MOBILE/Pages/Button.js"],"names":["React","useState","useForm","Controller","useMutation","useQuery","gql","Button","control","handleSubmit","errors","onSubmit","d","console","log","required","props","value","onChange","styles","StyleSheet","create","centeredView","flex","justifyContent","alignItems","marginTop","modalView","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","openButton","textStyle","color","fontWeight","textAlign","modalText","marginBottom","input","fontSize","FETCH_USER_QUERY","REDEEM_POINTS_MUTATION"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport {\r\n  Alert,\r\n  Modal,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableHighlight,\r\n  View,\r\n  TextInput,\r\n} from \"react-native\";\r\nimport { useMutation, useQuery } from \"@apollo/client\";\r\nimport gql from \"graphql-tag\";\r\n\r\nfunction Button() {\r\n  const { control, handleSubmit, errors } = useForm();\r\n  const onSubmit = (d) => {\r\n    console.log(d);\r\n  };\r\n  console.log(\"errors\", errors);\r\n\r\n  // let user = {\r\n  //   username: \"alambrito\",\r\n  //   firstName: \"Alan\",\r\n  //   lastName: \"Brito\",\r\n  //   points: 10,\r\n  //   fallPoints: 5,\r\n  // };\r\n  //\r\n  // const { register, handleSubmit, setValue } = useForm();\r\n  //\r\n  // const [redeemPointsModal, setRedeemPointsModal] = useState(false);\r\n  //\r\n  // const openModal = (name) => {\r\n  //   if (name === \"redeemPoints\") {\r\n  //     setRedeemPointsModal(true);\r\n  //   }\r\n  // };\r\n  //\r\n  // const closeModal = (name) => {\r\n  //   if (name === \"redeemPoints\") {\r\n  //     setRedeemPointsModal(false);\r\n  //   }\r\n  // };\r\n  //\r\n  // const onSubmit = () => {\r\n  //   setRedeemPointsModal(false);\r\n  // };\r\n  // const [value, onChangeText] = React.useState();\r\n\r\n  return (\r\n    <View>\r\n      <View>\r\n        <Text>enter code:</Text>\r\n        <Controller\r\n          name=\"code\"\r\n          control={control}\r\n          rules={{ required: \"This is required.\" }}\r\n          render={(props) => (\r\n            <TextInput\r\n              {...props}\r\n              onChangeText={(value) => {\r\n                props.onChange(value);\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </View>\r\n      <View>\r\n        <Button title=\"Button\" onPress={handleSubmit(onSubmit)}></Button>\r\n      </View>\r\n    </View>\r\n    // <View style={styles.centeredView}>\r\n    //   <Modal\r\n    //     animationType=\"slide\"\r\n    //     transparent={true}\r\n    //     visible={redeemPointsModal}\r\n    //     onRequestClose={() => {\r\n    //       Alert.alert(\"Modal has been closed.\");\r\n    //     }}\r\n    //   >\r\n    //     <View style={styles.centeredView}>\r\n    //       <View style={styles.modalView}>\r\n    //         <Text style={styles.modalText}>Event code:</Text>\r\n    //         <TextInput\r\n    //           style={styles.input}\r\n    //           placeholder=\"...\"\r\n    //           onChangeText={text => onChangeText(text)}\r\n    //           value={value}\r\n    //           spellCheck={false}\r\n    //           autoCorrect={false}\r\n    //         />\r\n    //\r\n    //         <TouchableHighlight\r\n    //           style={{ ...styles.openButton, backgroundColor: \"#004D73\" }}\r\n    //           onPress={handleSubmit(onSubmit)}\r\n    //         >\r\n    //           <Text style={styles.textStyle}>Submit</Text>\r\n    //         </TouchableHighlight>\r\n    //\r\n    //         <TouchableHighlight\r\n    //           style={{ ...styles.openButton, backgroundColor: \"gray\" }}\r\n    //           onPress={() => closeModal(\"redeemPoints\")}\r\n    //         >\r\n    //           <Text style={styles.textStyle}>Cancel</Text>\r\n    //         </TouchableHighlight>\r\n    //       </View>\r\n    //     </View>\r\n    //   </Modal>\r\n    //\r\n    //   <Text style={styles.modalText}>{user.fallPoints}</Text>\r\n    //   <TouchableHighlight\r\n    //     style={styles.openButton}\r\n    //     onPress={() => openModal(\"redeemPoints\")}\r\n    //   >\r\n    //     <Text style={styles.textStyle}>Redeem Code</Text>\r\n    //   </TouchableHighlight>\r\n    // </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  centeredView: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 22,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  openButton: {\r\n    backgroundColor: \"#004D73\",\r\n    borderRadius: 20,\r\n    padding: 10,\r\n    elevation: 2,\r\n  },\r\n  textStyle: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n  modalText: {\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    width: 350,\r\n    height: 55,\r\n    backgroundColor: \"white\",\r\n    margin: 10,\r\n    padding: 8,\r\n    color: \"black\",\r\n    borderRadius: 14,\r\n    fontSize: 18,\r\n    fontWeight: \"500\",\r\n  },\r\n});\r\n\r\nconst FETCH_USER_QUERY = gql`\r\n  query getUser($userId: ID!) {\r\n    getUser(userId: $userId) {\r\n      firstName\r\n      lastName\r\n      points\r\n      fallPoints\r\n      springPoints\r\n      summerPoints\r\n      fallPercentile\r\n      springPercentile\r\n      summerPercentile\r\n      events {\r\n        name\r\n        category\r\n        createdAt\r\n        points\r\n      }\r\n      tasks {\r\n        name\r\n        points\r\n        startDate\r\n      }\r\n      bookmarkedTasks\r\n    }\r\n  }\r\n`;\r\n\r\nconst REDEEM_POINTS_MUTATION = gql`\r\n  mutation redeemPoints($code: String!, $username: String!) {\r\n    redeemPoints(redeemPointsInput: { code: $code, username: $username }) {\r\n      points\r\n      fallPoints\r\n      springPoints\r\n      summerPoints\r\n      message\r\n      events {\r\n        id\r\n        name\r\n        category\r\n        createdAt\r\n        points\r\n      }\r\n      tasks {\r\n        name\r\n        points\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}