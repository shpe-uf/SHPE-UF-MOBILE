{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\SHPE-UF-MOBILE\\\\Pages\\\\CodeButton.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation redeemPoints($code: String!, $username: String!) {\\n    redeemPoints(redeemPointsInput: { code: $code, username: $username }) {\\n      points\\n      fallPoints\\n      springPoints\\n      summerPoints\\n      message\\n      events {\\n        id\\n        name\\n        category\\n        createdAt\\n        points\\n      }\\n      tasks {\\n        name\\n        points\\n        createdAt\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query getUser($userId: ID!) {\\n    getUser(userId: $userId) {\\n      firstName\\n      lastName\\n      points\\n      fallPoints\\n      springPoints\\n      summerPoints\\n      fallPercentile\\n      springPercentile\\n      summerPercentile\\n      events {\\n        name\\n        category\\n        createdAt\\n        points\\n      }\\n      tasks {\\n        name\\n        points\\n        startDate\\n      }\\n      bookmarkedTasks\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext, createContext } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport Constants from \"expo-constants\";\n\nfunction CodeButton() {\n  var _this = this;\n\n  var codeName = \"uwu\";\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors;\n\n  var onSubmit = function onSubmit(data) {\n    console.log(data);\n    codeName = data.code;\n    console.log(codeName);\n  };\n\n  var onChange = function onChange(arg) {\n    return {\n      value: arg.nativeEvent.text\n    };\n  };\n\n  console.log(errors);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Enter code:\"), React.createElement(Controller, {\n    control: control,\n    render: function render(_ref) {\n      var onChange = _ref.onChange,\n          onBlur = _ref.onBlur,\n          value = _ref.value;\n      return React.createElement(TextInput, {\n        style: styles.input,\n        onBlur: onBlur,\n        onChangeText: function onChangeText(value) {\n          return onChange(value);\n        },\n        value: value,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      });\n    },\n    name: \"code\",\n    rules: {\n      required: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    style: styles.buttonInner,\n    color: true,\n    title: \"Submit\",\n    onPress: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    style: styles.buttonInner,\n    color: true,\n    title: \"Cancel\",\n    onPress: function onPress() {\n      setModalVisible(!modalVisible);\n      reset({\n        code: \"\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }))), React.createElement(TouchableHighlight, {\n    style: styles.button,\n    onPress: function onPress() {\n      setModalVisible(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, \"Redeem Code\")), React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, \"For testing purposes, the code is: \", data.code));\n}\n\nvar styles = StyleSheet.create({\n  label: {\n    color: \"white\",\n    margin: 20,\n    marginLeft: 0\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  button: {\n    marginTop: 40,\n    color: \"white\",\n    height: 40,\n    backgroundColor: \"#42A5F5\",\n    borderRadius: 20\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingTop: Constants.statusBarHeight,\n    padding: 8,\n    backgroundColor: \"#004D73\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    height: 40,\n    padding: 10,\n    borderRadius: 4\n  },\n  textStyle: {\n    padding: 8,\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  }\n});\nvar FETCH_USER_QUERY = gql(_templateObject());\nvar REDEEM_POINTS_MUTATION = gql(_templateObject2());\nexport default CodeButton;","map":{"version":3,"sources":["C:/Users/hp/Desktop/SHPE-UF-MOBILE/Pages/CodeButton.js"],"names":["React","useState","useContext","createContext","useMutation","useQuery","gql","useForm","Controller","Constants","CodeButton","codeName","register","setValue","handleSubmit","control","reset","errors","onSubmit","data","console","log","code","onChange","arg","value","nativeEvent","text","modalVisible","setModalVisible","styles","container","Alert","alert","label","onBlur","input","required","button","buttonInner","textStyle","StyleSheet","create","color","margin","marginLeft","modalView","backgroundColor","borderRadius","padding","alignItems","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","marginTop","flex","justifyContent","paddingTop","statusBarHeight","fontWeight","textAlign","FETCH_USER_QUERY","REDEEM_POINTS_MUTATION"],"mappings":"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","sourcesContent":["import React, { useState, useContext, createContext } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  Button,\r\n  Alert,\r\n  Modal,\r\n  TouchableHighlight,\r\n} from \"react-native\";\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport Constants from \"expo-constants\";\r\n\r\n/*Isabel made a button. So, the idea should be that when her button is clicked\r\nit goes to my redeem code form*/\r\nfunction CodeButton() {\r\n  let codeName = \"uwu\";\r\n  // const [errors, setErrors] = useState({});\r\n  //\r\n  // let {\r\n  //   user: { id, username }\r\n  // } = useContext(AuthContext);\r\n  // let {data, refetch} = useQuery(FETCH_USER_QUERY, {\r\n  //   variables: {\r\n  //     userId: id\r\n  //   }\r\n  // });\r\n  // if(data){\r\n  //   let user = data.getUser;\r\n  // }\r\n\r\n  const {\r\n    register,\r\n    setValue,\r\n    handleSubmit,\r\n    control,\r\n    reset,\r\n    errors,\r\n  } = useForm(/*redeemPointsCallback, {\r\n    code: \"\",\r\n    username: username\r\n  }*/);\r\n  // function redeemPointsCallback() {\r\n  //   redeemPoints();\r\n  // }\r\n  //\r\n  // const [redeemPoints, { loading }] = useMutation(REDEEM_POINTS_MUTATION, {\r\n  //   update(\r\n  //     _,\r\n  //     {\r\n  //       data: { redeemPoints: userData }\r\n  //     }\r\n  //   ) {\r\n  //     values.code = \"\";\r\n  //     setErrors(false);\r\n  //     setRedeemPointsModal(false);\r\n  //     updateGetUser(userData);\r\n  //   },\r\n  //\r\n  //   onError(err) {\r\n  //     setErrors(err.graphQLErrors[0].extensions.exception.errors);\r\n  //   },\r\n  //\r\n  //   variables: values\r\n  // });\r\n  //\r\n  // function updateGetUser(userData) {\r\n  //   user.fallPoints = userData.fallPoints;\r\n  //   user.springPoints = userData.springPoints;\r\n  //   user.summerPoints = userData.summerPoints;\r\n  //   user.events = userData.events;\r\n  //   user.tasks = userData.tasks;\r\n  //   user.message = userData.message;\r\n  //\r\n  //   if (user.message !== \"\") {\r\n  //     toast.warn(user.message, {\r\n  //       position: toast.POSITION.BOTTOM_CENTER\r\n  //     });\r\n  //   }\r\n  // }\r\n\r\n  const onSubmit = (data) => {\r\n    console.log(data);\r\n    codeName = data.code;\r\n    console.log(codeName);\r\n    /*in here, we have the code. What we need is to use the use the Mutation\r\n    and put data as the code*/\r\n  };\r\n\r\n  const onChange = (arg) => {\r\n    return {\r\n      value: arg.nativeEvent.text,\r\n    };\r\n  };\r\n\r\n  console.log(errors);\r\n\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          // values.code = \"\";\r\n          // setErrors(false);\r\n          // setRedeemPointsModal(false);\r\n          Alert.alert(\"Modal has been closed.\");\r\n        }}\r\n      >\r\n        <Text style={styles.label}>Enter code:</Text>\r\n        <Controller\r\n          control={control}\r\n          render={({ onChange, onBlur, value }) => (\r\n            <TextInput\r\n              style={styles.input}\r\n              onBlur={onBlur}\r\n              onChangeText={(value) => onChange(value)}\r\n              value={value}\r\n            />\r\n          )}\r\n          name=\"code\"\r\n          rules={{ required: true }}\r\n        />\r\n\r\n        <View style={styles.button}>\r\n          <Button\r\n            style={styles.buttonInner}\r\n            color\r\n            title=\"Submit\"\r\n            onPress={handleSubmit(onSubmit)}\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.button}>\r\n          <Button\r\n            style={styles.buttonInner}\r\n            color\r\n            title=\"Cancel\"\r\n            onPress={() => {\r\n              setModalVisible(!modalVisible);\r\n              reset({\r\n                code: \"\",\r\n              });\r\n            }}\r\n          />\r\n        </View>\r\n      </Modal>\r\n\r\n      <TouchableHighlight\r\n        style={styles.button}\r\n        onPress={() => {\r\n          setModalVisible(true);\r\n        }}\r\n      >\r\n        <Text style={styles.textStyle}>Redeem Code</Text>\r\n      </TouchableHighlight>\r\n      <Text style={styles.textStyle}>For testing purposes, the code is: {data.code}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  label: {\r\n    color: \"white\",\r\n    margin: 20,\r\n    marginLeft: 0,\r\n  },\r\n  modalView: {\r\n    margin: 20,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    padding: 35,\r\n    alignItems: \"center\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  button: {\r\n    marginTop: 40,\r\n    color: \"white\",\r\n    height: 40,\r\n    backgroundColor: \"#42A5F5\",\r\n    borderRadius: 20,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    paddingTop: Constants.statusBarHeight,\r\n    padding: 8,\r\n    backgroundColor: \"#004D73\",\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    height: 40,\r\n    padding: 10,\r\n    borderRadius: 4,\r\n  },\r\n  textStyle: {\r\n    padding: 8,\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\n\r\nconst FETCH_USER_QUERY = gql`\r\n  query getUser($userId: ID!) {\r\n    getUser(userId: $userId) {\r\n      firstName\r\n      lastName\r\n      points\r\n      fallPoints\r\n      springPoints\r\n      summerPoints\r\n      fallPercentile\r\n      springPercentile\r\n      summerPercentile\r\n      events {\r\n        name\r\n        category\r\n        createdAt\r\n        points\r\n      }\r\n      tasks {\r\n        name\r\n        points\r\n        startDate\r\n      }\r\n      bookmarkedTasks\r\n    }\r\n  }\r\n`;\r\n\r\nconst REDEEM_POINTS_MUTATION = gql`\r\n  mutation redeemPoints($code: String!, $username: String!) {\r\n    redeemPoints(redeemPointsInput: { code: $code, username: $username }) {\r\n      points\r\n      fallPoints\r\n      springPoints\r\n      summerPoints\r\n      message\r\n      events {\r\n        id\r\n        name\r\n        category\r\n        createdAt\r\n        points\r\n      }\r\n      tasks {\r\n        name\r\n        points\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CodeButton;\r\n"]},"metadata":{},"sourceType":"module"}