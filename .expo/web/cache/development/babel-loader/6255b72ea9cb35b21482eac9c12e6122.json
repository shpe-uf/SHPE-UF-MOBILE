{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\isami\\\\Desktop\\\\CompSciStuff\\\\github\\\\shpe\\\\SHPE-UF-MOBILE\\\\context\\\\auth.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer, createContext } from \"react\";\nimport jwtDecode from \"jwt-decode\";\nvar initialState = {\n  user: null\n};\n\nif (localStorage.getItem(\"jwtToken\")) {\n  var decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\n  localStorage.setItem('permission', decodedToken.permission);\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem(\"jwtToken\");\n  } else {\n    initialState.user = decodedToken;\n  }\n}\n\nvar AuthContext = createContext({\n  user: null,\n  login: function login(userData) {},\n  logout: function logout() {}\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: action.payload\n      });\n\n    case \"LOGOUT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: null\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  var _useReducer = useReducer(authReducer, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  function login(userData) {\n    localStorage.setItem(\"jwtToken\", userData.token);\n    dispatch({\n      type: \"LOGIN\",\n      payload: userData\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem(\"jwtToken\");\n    localStorage.removeItem('permission');\n    dispatch({\n      type: \"LOGOUT\"\n    });\n  }\n\n  return React.createElement(AuthContext.Provider, _extends({\n    value: {\n      user: state.user,\n      login: login,\n      logout: logout\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport { AuthContext, AuthProvider };","map":{"version":3,"sources":["C:/Users/isami/Desktop/CompSciStuff/github/shpe/SHPE-UF-MOBILE/context/auth.js"],"names":["React","useReducer","createContext","jwtDecode","initialState","user","localStorage","getItem","decodedToken","setItem","permission","exp","Date","now","removeItem","AuthContext","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","dispatch","token"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;;AAIA,IAAIC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAJ,EAAsC;AACpC,MAAMC,YAAY,GAAGL,SAAS,CAACG,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,CAA9B;AAEAD,EAAAA,YAAY,CAACG,OAAb,CAAqB,YAArB,EAAmCD,YAAY,CAACE,UAAhD;;AAEA,MAAIF,YAAY,CAACG,GAAb,GAAiB,IAAjB,GAAwBC,IAAI,CAACC,GAAL,EAA5B,EAAwC;AACtCP,IAAAA,YAAY,CAACQ,UAAb,CAAwB,UAAxB;AAED,GAHD,MAGO;AACLV,IAAAA,YAAY,CAACC,IAAb,GAAoBG,YAApB;AACD;AACF;;AAED,IAAMO,WAAW,GAAGb,aAAa,CAAC;AAChCG,EAAAA,IAAI,EAAE,IAD0B;AAEhCW,EAAAA,KAAK,EAAE,eAAAC,QAAQ,EAAI,CAAE,CAFW;AAGhCC,EAAAA,MAAM,EAAE,kBAAM,CAAE;AAHgB,CAAD,CAAjC;;AAMA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,6CACKF,KADL;AAEEf,QAAAA,IAAI,EAAEgB,MAAM,CAACE;AAFf;;AAIF,SAAK,QAAL;AACE,6CACKH,KADL;AAEEf,QAAAA,IAAI,EAAE;AAFR;;AAIF;AACE,aAAOe,KAAP;AAZJ;AAcD;;AAED,SAASI,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,oBACDxB,UAAU,CAACkB,WAAD,EAAcf,YAAd,CADT;AAAA;AAAA,MACpBgB,KADoB;AAAA,MACbM,QADa;;AAG3B,WAASV,KAAT,CAAeC,QAAf,EAAyB;AACvBX,IAAAA,YAAY,CAACG,OAAb,CAAqB,UAArB,EAAiCQ,QAAQ,CAACU,KAA1C;AACAD,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE,OADC;AAEPC,MAAAA,OAAO,EAAEN;AAFF,KAAD,CAAR;AAID;;AAED,WAASC,MAAT,GAAkB;AAChBZ,IAAAA,YAAY,CAACQ,UAAb,CAAwB,UAAxB;AACAR,IAAAA,YAAY,CAACQ,UAAb,CAAwB,YAAxB;AACAY,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGD;;AAED,SACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AAAEjB,MAAAA,IAAI,EAAEe,KAAK,CAACf,IAAd;AAAoBW,MAAAA,KAAK,EAALA,KAApB;AAA2BE,MAAAA,MAAM,EAANA;AAA3B;AADT,KAEMO,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAMD;;AAED,SAASV,WAAT,EAAsBS,YAAtB","sourcesContent":["import React, { useReducer, createContext } from \"react\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst initialState = {\r\n  user: null\r\n}\r\n\r\nif (localStorage.getItem(\"jwtToken\")) {\r\n  const decodedToken = jwtDecode(localStorage.getItem(\"jwtToken\"));\r\n\r\n  localStorage.setItem('permission', decodedToken.permission);\r\n\r\n  if (decodedToken.exp*1000 < Date.now()) {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    // localStorage.removeItem('permission');\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  login: userData => {},\r\n  logout: () => {}\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    case \"LOGOUT\":\r\n      return {\r\n        ...state,\r\n        user: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n  \r\n  function login(userData) {\r\n    localStorage.setItem(\"jwtToken\", userData.token);\r\n    dispatch({\r\n      type: \"LOGIN\",\r\n      payload: userData\r\n    });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    localStorage.removeItem('permission');\r\n    dispatch({\r\n      type: \"LOGOUT\"\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ user: state.user, login, logout }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider }\r\n"]},"metadata":{},"sourceType":"module"}