{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"/Users/julia/SHPE-UF-MOBILE/Pages/ViewTasks.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query ($userId: ID!) {\\n    getUser(userId: $userId) {\\n      firstName\\n      lastName\\n      points\\n      fallPoints\\n      springPoints\\n      summerPoints\\n      fallPercentile\\n      springPercentile\\n      summerPercentile\\n      events {\\n        name\\n        category\\n        createdAt\\n        points\\n      }\\n      tasks {\\n        name\\n        points\\n        startDate\\n      }\\n      bookmarkedTasks\\n    }\\n\\n\\n    getTasks {\\n      id\\n      name\\n      startDate\\n      endDate\\n      description\\n      points\\n      attendance\\n      semester\\n      createdAt\\n      users {\\n        firstName\\n        lastName\\n        username\\n        email\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Card, ListItem, Icon } from 'reactnative-elements';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\nimport { useForm, getErrors } from \"../util/hooks\";\n\nfunction ViewTasks() {\n  var _this = this;\n\n  var _useQuery = useQuery(FETCH_USER_QUERY, {\n    variables: {\n      userId: \"5f90e4d4920bab09f6df0106\"\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data,\n      error = _useQuery.error;\n\n  if (loading) return null;\n  if (error) return null;\n  console.log(\"I am logging data \", data);\n  var user = data.getUser;\n  var allTasks = data.getTasks;\n  var myBookmarkedTasks = user.bookmarkedTasks;\n  console.log(user);\n  console.log(\"tatattatasks: \", data.getTasks);\n  console.log(\"USERR TAAAAASKS: \", user.bookmarkedTasks);\n\n  if (user.bookmarkedTasks.length) {\n    console.log(\"We got the goods\");\n\n    for (var i = 0; i < user.bookmarkedTasks.length; i++) {\n      console.log(user.bookmarkedTasks[i]);\n    }\n  }\n\n  React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"BOOKMARKED TASKS\"), React.createElement(Card.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), myBookmarkedTasks.map(function (u, i) {\n    return React.createElement(View, {\n      key: i,\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      style: styles.container,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, u));\n  }));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#42A5F5',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    backgroundColor: 'white',\n    color: \"black\",\n    borderRadius: 14,\n    padding: 8,\n    margin: 10,\n    width: 350,\n    height: 55,\n    fontSize: 18\n  },\n  wording: {\n    fontSize: 20,\n    color: 'black'\n  }\n});\nvar FETCH_USER_QUERY = gql(_templateObject());\nexport default ViewTasks;","map":{"version":3,"sources":["/Users/julia/SHPE-UF-MOBILE/Pages/ViewTasks.js"],"names":["React","useState","Card","ListItem","Icon","KeyboardAwareScrollView","useMutation","useQuery","gql","useForm","getErrors","ViewTasks","FETCH_USER_QUERY","variables","userId","loading","data","error","console","log","user","getUser","allTasks","getTasks","myBookmarkedTasks","bookmarkedTasks","length","i","map","u","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","input","borderWidth","color","borderRadius","padding","margin","width","height","fontSize","wording"],"mappings":"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","sourcesContent":["import  React, {useState} from 'react';\nimport { TouchableWithoutFeedback, TextInput, StyleSheet, SafeAreaView, Keyboard, Button, Alert, Text, View } from 'react-native';\nimport { Card, ListItem, Icon } from 'reactnative-elements'\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\nimport { useForm, getErrors } from \"../util/hooks\";\n\nfunction ViewTasks() {\n\n    const { loading, data, error } = useQuery(FETCH_USER_QUERY, {\n      variables: {\n        userId: \"5f90e4d4920bab09f6df0106\", // dummy user for now\n      },\n    });\n    if (loading) return null;\n    if (error) return null;\n\n      console.log(\"I am logging data \", data)\n      let user = data.getUser;\n      let allTasks = data.getTasks;\n      let myBookmarkedTasks = user.bookmarkedTasks;\n      console.log(user); // need user for bookmarked tasks\n      console.log(\"tatattatasks: \", data.getTasks);\n      console.log(\"USERR TAAAAASKS: \", user.bookmarkedTasks);\n\n      if (user.bookmarkedTasks.length){\n        console.log(\"We got the goods\");\n        for (let i=0; i<user.bookmarkedTasks.length; i++){\n          console.log(user.bookmarkedTasks[i]);\n        }\n      }\n\n\n    <Card>\n      <Card.Title>BOOKMARKED TASKS</Card.Title>\n      <Card.Divider/>\n      {\n        myBookmarkedTasks.map((u,i) => {\n          return (\n            <View key = {i} style = {styles.container}>\n            <Text style = {styles.container}>{u}</Text>\n            </View>\n          );\n        })\n      }\n      </Card>\n\n\n\n/*\n    return (\n        <SafeAreaView style ={styles.container}>\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n                <KeyboardAwareScrollView>\n\n                </KeyboardAwareScrollView>\n            </TouchableWithoutFeedback>\n        </SafeAreaView>\n    )\n    */\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#42A5F5',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    input: {\n        borderWidth: 1,\n        backgroundColor: 'white',\n        color: \"black\",\n        borderRadius: 14,\n        padding: 8,\n        margin: 10,\n        width: 350,\n        height: 55,\n        fontSize: 18,\n    },\n    wording: {\n        fontSize: 20,\n        color: 'black',\n    },\n});\n\nconst FETCH_USER_QUERY = gql`\n  query ($userId: ID!) {\n    getUser(userId: $userId) {\n      firstName\n      lastName\n      points\n      fallPoints\n      springPoints\n      summerPoints\n      fallPercentile\n      springPercentile\n      summerPercentile\n      events {\n        name\n        category\n        createdAt\n        points\n      }\n      tasks {\n        name\n        points\n        startDate\n      }\n      bookmarkedTasks\n    }\n\n\n    getTasks {\n      id\n      name\n      startDate\n      endDate\n      description\n      points\n      attendance\n      semester\n      createdAt\n      users {\n        firstName\n        lastName\n        username\n        email\n      }\n    }\n  }\n`;\nexport default ViewTasks;\n"]},"metadata":{},"sourceType":"module"}