{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\SHPE-UF-MOBILE\\\\App.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query getUser($userId: ID!) {\\n    getUser(userId: $userId) {\\n      firstName\\n      lastName\\n      points\\n      fallPoints\\n      springPoints\\n      summerPoints\\n      fallPercentile\\n      springPercentile\\n      summerPercentile\\n      events {\\n        name\\n        category\\n        createdAt\\n        points\\n      }\\n      tasks {\\n        name\\n        points\\n        startDate\\n      }\\n      bookmarkedTasks\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport { settings } from \"./config\";\nimport gql from \"graphql-tag\";\nimport Register from \"./Pages/Register\";\nimport Button from \"./Pages/Button\";\nvar Stack = createStackNavigator();\nvar client = new ApolloClient({\n  uri: \"http://\" + settings.internalIP + \":5000\",\n  cache: new InMemoryCache()\n});\nvar user = {\n  \"firstName\": \"Alan\",\n  \"lastName\": \"Brito\",\n  \"points\": 3,\n  \"fallPoints\": 2,\n  \"springPoints\": 1,\n  \"summerPoints\": 0\n};\nexport default function App() {\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Button\",\n    user: user,\n    component: Button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Register\",\n    component: Register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\nvar FETCH_USER_QUERY = gql(_templateObject());","map":{"version":3,"sources":["C:/Users/hp/Desktop/SHPE-UF-MOBILE/App.js"],"names":["StatusBar","React","NavigationContainer","createStackNavigator","ApolloClient","ApolloProvider","InMemoryCache","settings","gql","Register","Button","Stack","client","uri","internalIP","cache","user","App","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","FETCH_USER_QUERY"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,YAAT,EAAuBC,cAAvB,EAAuCC,aAAvC,QAA4D,gBAA5D;AACA,SAASC,QAAT;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,OAAOC,QAAP;AACA,OAAOC,MAAP;AAEA,IAAMC,KAAK,GAAGR,oBAAoB,EAAlC;AAEA,IAAMS,MAAM,GAAG,IAAIR,YAAJ,CAAiB;AAC9BS,EAAAA,GAAG,cAAYN,QAAQ,CAACO,UAArB,UAD2B;AAE9BC,EAAAA,KAAK,EAAE,IAAIT,aAAJ;AAFuB,CAAjB,CAAf;AAKA,IAAIU,IAAI,GAAG;AACT,eAAa,MADJ;AAET,cAAY,OAFH;AAGT,YAAU,CAHD;AAIT,gBAAc,CAJL;AAKT,kBAAgB,CALP;AAMT,kBAAgB;AANP,CAAX;AASA,eAAe,SAASC,GAAT,GAAe;AAC5B,SACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEL,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,QAAnB;AAA4B,IAAA,IAAI,EAAEI,IAAlC;AAAwC,IAAA,SAAS,EAAEN,MAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAED,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,CADF;AAUD;AAED,IAAMS,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf;AASA,IAAMC,gBAAgB,GAAGlB,GAAH,mBAAtB","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React from \"react\";\r\nimport { StyleSheet, Text, View } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\r\nimport { settings } from \"./config\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport Register from \"./Pages/Register\";\r\nimport Button from \"./Pages/Button\";\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nconst client = new ApolloClient({\r\n  uri: `http://${settings.internalIP}:5000`,\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nlet user = {\r\n  \"firstName\": \"Alan\",\r\n  \"lastName\": \"Brito\",\r\n  \"points\": 3,\r\n  \"fallPoints\": 2,\r\n  \"springPoints\": 1,\r\n  \"summerPoints\": 0,\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <NavigationContainer>\r\n        <Stack.Navigator>\r\n          <Stack.Screen name=\"Button\" user={user} component={Button} />\r\n          <Stack.Screen name=\"Register\" component={Register} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n\r\nconst FETCH_USER_QUERY = gql`\r\n  query getUser($userId: ID!) {\r\n    getUser(userId: $userId) {\r\n      firstName\r\n      lastName\r\n      points\r\n      fallPoints\r\n      springPoints\r\n      summerPoints\r\n      fallPercentile\r\n      springPercentile\r\n      summerPercentile\r\n      events {\r\n        name\r\n        category\r\n        createdAt\r\n        points\r\n      }\r\n      tasks {\r\n        name\r\n        points\r\n        startDate\r\n      }\r\n      bookmarkedTasks\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}