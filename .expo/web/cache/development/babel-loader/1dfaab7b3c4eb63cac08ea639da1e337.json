{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"/Users/julia/SHPE-UF-MOBILE/Pages/ViewTasks.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query ($userId: ID!) {\\n    getUser(userId: $userId) {\\n      firstName\\n      lastName\\n      points\\n      fallPoints\\n      springPoints\\n      summerPoints\\n      fallPercentile\\n      springPercentile\\n      summerPercentile\\n      events {\\n        name\\n        category\\n        createdAt\\n        points\\n      }\\n      tasks {\\n        name\\n        points\\n        startDate\\n      }\\n      bookmarkedTasks\\n    }\\n\\n\\n    getTasks {\\n      id\\n      name\\n      startDate\\n      endDate\\n      description\\n      points\\n      attendance\\n      semester\\n      createdAt\\n      users {\\n        firstName\\n        lastName\\n        username\\n        email\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Card, ListItem, Icon } from 'react-native-elements';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\nimport { useForm, getErrors } from \"../util/hooks\";\n\nfunction ViewTasks() {\n  var _useQuery = useQuery(FETCH_USER_QUERY, {\n    variables: {\n      userId: \"5f90e4d4920bab09f6df0106\"\n    }\n  }),\n      loading = _useQuery.loading,\n      data = _useQuery.data,\n      error = _useQuery.error;\n\n  if (loading) return null;\n  if (error) return null;\n  console.log(\"I am logging data \", data);\n  var user = data.getUser;\n  var allTasks = data.getTasks;\n  var myBookmarkedTasks = user.bookmarkedTasks;\n  console.log(user);\n  console.log(\"tatattatasks: \", data.getTasks);\n  console.log(\"USERR TAAAAASKS: \", user.bookmarkedTasks);\n  var cards = [];\n  cards.push(React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"TASKS\"), React.createElement(Card.Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  })));\n  var count = 0;\n\n  while (count < allTasks.length) {\n    console.log(allTasks[0].name);\n    cards.push(React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, allTasks[count].name), React.createElement(Card.Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Points: \", allTasks[count].points, \"| \", allTasks[count].description)));\n    count = count + 1;\n  }\n\n  return cards;\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#42A5F5',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    backgroundColor: 'white',\n    color: \"black\",\n    borderRadius: 14,\n    padding: 8,\n    margin: 10,\n    width: 350,\n    height: 55,\n    fontSize: 18\n  },\n  wording: {\n    fontSize: 20,\n    color: 'black'\n  }\n});\nvar FETCH_USER_QUERY = gql(_templateObject());\nexport default ViewTasks;","map":{"version":3,"sources":["/Users/julia/SHPE-UF-MOBILE/Pages/ViewTasks.js"],"names":["React","useState","Card","ListItem","Icon","KeyboardAwareScrollView","useMutation","useQuery","gql","useForm","getErrors","ViewTasks","FETCH_USER_QUERY","variables","userId","loading","data","error","console","log","user","getUser","allTasks","getTasks","myBookmarkedTasks","bookmarkedTasks","cards","push","count","length","name","points","description","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","input","borderWidth","color","borderRadius","padding","margin","width","height","fontSize","wording"],"mappings":"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","sourcesContent":["import  React, {useState} from 'react';\nimport { TouchableWithoutFeedback, TextInput, StyleSheet, SafeAreaView, Keyboard, Button, Alert, Text, View} from 'react-native';\nimport { Card, ListItem, Icon } from 'react-native-elements'\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\nimport { useForm, getErrors } from \"../util/hooks\";\n\nfunction ViewTasks() {\n\n    const { loading, data, error } = useQuery(FETCH_USER_QUERY, {\n      variables: {\n        userId: \"5f90e4d4920bab09f6df0106\", // dummy user for now\n      },\n    });\n    if (loading) return null;\n    if (error) return null;\n\n      console.log(\"I am logging data \", data)\n      const user = data.getUser;\n      const allTasks = data.getTasks;\n      const myBookmarkedTasks = user.bookmarkedTasks;\n      console.log(user); // need user for bookmarked tasks\n      console.log(\"tatattatasks: \", data.getTasks);\n      console.log(\"USERR TAAAAASKS: \", user.bookmarkedTasks);\n\n/*\n      if (user.bookmarkedTasks.length){\n        console.log(\"We got the goods\");\n        for (let i=0; i<user.bookmarkedTasks.length; i++){\n          console.log(user.bookmarkedTasks[i]);\n          <Card>\n          <Card.Title>BOOKMARKED TASKS</Card.Title>\n          <Card.Divider/>{\n            return (\n                <SafeAreaView style ={styles.container}>\n                    <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n                        <KeyboardAwareScrollView>\n                          <Text>myBookmarkedTasks[i]</Text>\n                        </KeyboardAwareScrollView>\n                    </TouchableWithoutFeedback>\n                </SafeAreaView>\n\n            );\n          }\n          </Card>\n        }\n      }\n      */\n\n      const cards = [];\n      cards.push(\n      <Card>\n      <Card.Title>TASKS</Card.Title>\n      <Card.Divider/>{}\n      </Card>\n      )\n      let count = 0;\n      while (count < allTasks.length){\n\n        console.log(allTasks[0].name);\n        cards.push(\n          <Card>\n          <Card.Title>{allTasks[count].name}</Card.Title>\n          <Card.Divider/>{\n            <Text>\n              Points: {allTasks[count].points}\n\n               | {allTasks[count].description}\n              </Text>\n          }\n          </Card>\n        )\n        count = count + 1;\n      }\n\n\n\nreturn cards;\n\n\n/*\n      <Card>\n      <Card.Title>TASKS</Card.Title>\n      <Card.Divider/>\n      {\n        allTasks.map((u,i) =>{\n          return (\n            <ListItem\n            key={i}\n            title={u.name}\n            />\n\n        );\n        })\n        }\n        </Card>\n\n\n\n/*\n    <Card>\n      <Card.Title>BOOKMARKED TASKS</Card.Title>\n      <Card.Divider/>\n      {\n        myBookmarkedTasks.map((u,i) => {\n          return (\n            <View key = {i} style = {styles.container}>\n            <Text style = {{marginBottom: 10}}>{u.name}</Text>\n            </View>\n          );\n        })\n      }\n      </Card>\n      */\n\n\n\n/*\n    return (\n        <SafeAreaView style ={styles.container}>\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n                <KeyboardAwareScrollView>\n\n                </KeyboardAwareScrollView>\n            </TouchableWithoutFeedback>\n        </SafeAreaView>\n    )\n*/\n}\n\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#42A5F5',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    input: {\n        borderWidth: 1,\n        backgroundColor: 'white',\n        color: \"black\",\n        borderRadius: 14,\n        padding: 8,\n        margin: 10,\n        width: 350,\n        height: 55,\n        fontSize: 18,\n    },\n    wording: {\n        fontSize: 20,\n        color: 'black',\n    },\n});\n\nconst FETCH_USER_QUERY = gql`\n  query ($userId: ID!) {\n    getUser(userId: $userId) {\n      firstName\n      lastName\n      points\n      fallPoints\n      springPoints\n      summerPoints\n      fallPercentile\n      springPercentile\n      summerPercentile\n      events {\n        name\n        category\n        createdAt\n        points\n      }\n      tasks {\n        name\n        points\n        startDate\n      }\n      bookmarkedTasks\n    }\n\n\n    getTasks {\n      id\n      name\n      startDate\n      endDate\n      description\n      points\n      attendance\n      semester\n      createdAt\n      users {\n        firstName\n        lastName\n        username\n        email\n      }\n    }\n  }\n`;\nexport default ViewTasks;\n"]},"metadata":{},"sourceType":"module"}