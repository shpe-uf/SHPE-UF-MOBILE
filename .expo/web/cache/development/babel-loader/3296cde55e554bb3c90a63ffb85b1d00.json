{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/mnt/c/Users/covie/Desktop/SHPE_Mobile/SHPE-UF-MOBILE/node_modules/react-native-picker-select/node_modules/@react-native-community/picker/js/Picker.web.js\";\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PickerItem from \"./PickerItem\";\nimport { forwardRef, useRef } from 'react';\nvar Picker = forwardRef(function (props, forwardedRef) {\n  var enabled = props.enabled,\n      onValueChange = props.onValueChange,\n      selectedValue = props.selectedValue,\n      style = props.style,\n      testID = props.testID,\n      itemStyle = props.itemStyle,\n      mode = props.mode,\n      prompt = props.prompt,\n      other = _objectWithoutProperties(props, [\"enabled\", \"onValueChange\", \"selectedValue\", \"style\", \"testID\", \"itemStyle\", \"mode\", \"prompt\"]);\n\n  var hostRef = useRef(null);\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        selectedIndex = _e$target.selectedIndex,\n        value = _e$target.value;\n\n    if (onValueChange) {\n      onValueChange(value, selectedIndex);\n    }\n  }\n\n  return React.createElement(\"select\", _extends({\n    disabled: enabled === false ? true : undefined,\n    onChange: handleChange,\n    ref: hostRef,\n    style: StyleSheet.flatten([styles.initial, style]),\n    testid: testID,\n    value: selectedValue\n  }, other, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }));\n});\nPicker.Item = PickerItem;\nvar styles = StyleSheet.create({\n  initial: {\n    fontFamily: 'System',\n    margin: 0\n  }\n});\nexport default Picker;","map":{"version":3,"sources":["/mnt/c/Users/covie/Desktop/SHPE_Mobile/SHPE-UF-MOBILE/node_modules/react-native-picker-select/node_modules/@react-native-community/picker/js/Picker.web.js"],"names":["React","PickerItem","forwardRef","useRef","Picker","props","forwardedRef","enabled","onValueChange","selectedValue","style","testID","itemStyle","mode","prompt","other","hostRef","handleChange","e","target","selectedIndex","value","undefined","StyleSheet","flatten","styles","initial","Item","create","fontFamily","margin"],"mappings":";;;;;;AAKA,OAAOA,KAAP,MAAkB,OAAlB;;AAOA,OAAOC,UAAP;AACA,SAAQC,UAAR,EAAoBC,MAApB,QAAiC,OAAjC;AAeA,IAAMC,MAAM,GAAGF,UAAU,CAAiB,UAACG,KAAD,EAAQC,YAAR,EAAyB;AAAA,MAE/DC,OAF+D,GAW7DF,KAX6D,CAE/DE,OAF+D;AAAA,MAG/DC,aAH+D,GAW7DH,KAX6D,CAG/DG,aAH+D;AAAA,MAI/DC,aAJ+D,GAW7DJ,KAX6D,CAI/DI,aAJ+D;AAAA,MAK/DC,KAL+D,GAW7DL,KAX6D,CAK/DK,KAL+D;AAAA,MAM/DC,MAN+D,GAW7DN,KAX6D,CAM/DM,MAN+D;AAAA,MAO/DC,SAP+D,GAW7DP,KAX6D,CAO/DO,SAP+D;AAAA,MAQ/DC,IAR+D,GAW7DR,KAX6D,CAQ/DQ,IAR+D;AAAA,MAS/DC,MAT+D,GAW7DT,KAX6D,CAS/DS,MAT+D;AAAA,MAU5DC,KAV4D,4BAW7DV,KAX6D;;AAajE,MAAMW,OAAO,GAAGb,MAAM,CAAC,IAAD,CAAtB;;AAEA,WAASc,YAAT,CAAsBC,CAAtB,EAAiC;AAAA,oBACAA,CAAC,CAACC,MADF;AAAA,QACxBC,aADwB,aACxBA,aADwB;AAAA,QACTC,KADS,aACTA,KADS;;AAE/B,QAAIb,aAAJ,EAAmB;AACjBA,MAAAA,aAAa,CAACa,KAAD,EAAQD,aAAR,CAAb;AACD;AACF;;AAED,SAEE;AACE,IAAA,QAAQ,EAAEb,OAAO,KAAK,KAAZ,GAAoB,IAApB,GAA2Be,SADvC;AAEE,IAAA,QAAQ,EAAEL,YAFZ;AAGE,IAAA,GAAG,EAAED,OAHP;AAIE,IAAA,KAAK,EAAEO,UAAU,CAACC,OAAX,CAAmB,CAACC,MAAM,CAACC,OAAR,EAAiBhB,KAAjB,CAAnB,CAJT;AAKE,IAAA,MAAM,EAAEC,MALV;AAME,IAAA,KAAK,EAAEF;AANT,KAOMM,KAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF;AAYD,CAlCwB,CAAzB;AAqCAX,MAAM,CAACuB,IAAP,GAAc1B,UAAd;AAEA,IAAMwB,MAAM,GAAGF,UAAU,CAACK,MAAX,CAAkB;AAC/BF,EAAAA,OAAO,EAAE;AACPG,IAAAA,UAAU,EAAE,QADL;AAEPC,IAAAA,MAAM,EAAE;AAFD;AADsB,CAAlB,CAAf;AAOA,eAAe1B,MAAf","sourcesContent":["/**\n * @flow\n * @format\n */\n\nimport React from 'react';\nimport type {\n  ViewStyleProp,\n  TextStyleProp,\n} from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';\nimport {StyleSheet} from 'react-native';\nimport PickerItem from './PickerItem';\nimport {forwardRef, useRef} from 'react';\n\ntype PickerProps = {\n  ...ViewProps,\n  children?: typeof PickerItem | Array<typeof PickerItem>,\n  enabled?: boolean,\n  onValueChange?: (number | string, number) => void,\n  selectedValue?: number | string,\n  style?: ViewStyleProp,\n  /* compat */\n  itemStyle?: TextStyleProp,\n  mode?: string,\n  prompt?: string,\n};\n\nconst Picker = forwardRef<PickerProps, *>((props, forwardedRef) => {\n  const {\n    enabled,\n    onValueChange,\n    selectedValue,\n    style,\n    testID,\n    itemStyle,\n    mode,\n    prompt,\n    ...other\n  } = props;\n\n  const hostRef = useRef(null);\n\n  function handleChange(e: Object) {\n    const {selectedIndex, value} = e.target;\n    if (onValueChange) {\n      onValueChange(value, selectedIndex);\n    }\n  }\n\n  return (\n    // $FlowFixMe\n    <select\n      disabled={enabled === false ? true : undefined}\n      onChange={handleChange}\n      ref={hostRef}\n      style={StyleSheet.flatten([styles.initial, style])}\n      testid={testID}\n      value={selectedValue}\n      {...other}\n    />\n  );\n});\n\n// $FlowFixMe\nPicker.Item = PickerItem;\n\nconst styles = StyleSheet.create({\n  initial: {\n    fontFamily: 'System',\n    margin: 0,\n  },\n});\n\nexport default Picker;\n"]},"metadata":{},"sourceType":"module"}