{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\isami\\\\Desktop\\\\CompSciStuff\\\\github\\\\shpe\\\\SHPE-UF-MOBILE\\\\Pages\\\\Points.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query getUser($userId: ID!) {\\n    getUser(userId: $userId) {\\n      firstName\\n      lastName\\n      points\\n      fallPoints\\n      springPoints\\n      summerPoints\\n      fallPercentile\\n      springPercentile\\n      summerPercentile\\n      events {\\n        name\\n        category\\n        createdAt\\n        points\\n      }\\n      tasks {\\n        name\\n        points\\n        startDate\\n      }\\n      bookmarkedTasks\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport gql from \"graphql-tag\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport { AuthContext } from \"../../context/auth\";\n\nvar Points = function Points() {\n  var _useContext = useContext(AuthContext),\n      _useContext$user = _useContext.user,\n      id = _useContext$user.id,\n      email = _useContext$user.email;\n\n  var user = useQuery(FETCH_USER_QUERY, {\n    variables: {\n      userId: id\n    }\n  });\n\n  if (user) {\n    user = user.data.getUser;\n  }\n\n  return React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, \"Fall Points: \", user ? user.fallPoints : \"0\", user ? user.fallPercentile : \"0\", \" percentile Spring Points: \", user ? user.springPoints : \"0\", user ? user.springPercentile : \"0\", \" percentile Summer Points: \", user ? user.summerPoints : \"0\", user ? user.summerPercentile : \"0\", \" percentile\");\n};\n\nvar FETCH_USER_QUERY = gql(_templateObject());\nexport default Points;","map":{"version":3,"sources":["C:/Users/isami/Desktop/CompSciStuff/github/shpe/SHPE-UF-MOBILE/Pages/Points.js"],"names":["React","useContext","useState","gql","useQuery","useMutation","AuthContext","Points","user","id","email","FETCH_USER_QUERY","variables","userId","data","getUser","fallPoints","fallPercentile","springPoints","springPercentile","summerPoints","summerPercentile"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;;AAGA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AAEA,SAASC,WAAT;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,oBAGfN,UAAU,CAACK,WAAD,CAHK;AAAA,qCAEjBE,IAFiB;AAAA,MAETC,EAFS,oBAETA,EAFS;AAAA,MAELC,KAFK,oBAELA,KAFK;;AAKnB,MAAIF,IAAI,GAAGJ,QAAQ,CAACO,gBAAD,EAAmB;AACpCC,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAEJ;AADC;AADyB,GAAnB,CAAnB;;AAMA,MAAID,IAAJ,EAAS;AACPA,IAAAA,IAAI,GAAGA,IAAI,CAACM,IAAL,CAAUC,OAAjB;AACD;;AAED,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACgBP,IAAI,GAAGA,IAAI,CAACQ,UAAR,GAAqB,GADzC,EAEGR,IAAI,GAAGA,IAAI,CAACS,cAAR,GAAyB,GAFhC,iCAGkBT,IAAI,GAAGA,IAAI,CAACU,YAAR,GAAuB,GAH7C,EAIGV,IAAI,GAAGA,IAAI,CAACW,gBAAR,GAA2B,GAJlC,iCAKkBX,IAAI,GAAGA,IAAI,CAACY,YAAR,GAAuB,GAL7C,EAMGZ,IAAI,GAAGA,IAAI,CAACa,gBAAR,GAA2B,GANlC,gBADF;AAUD,CAzBD;;AA2BA,IAAMV,gBAAgB,GAAGR,GAAH,mBAAtB;AA4BA,eAAeI,MAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { Text } from 'react-native';\r\n\r\nimport gql from \"graphql-tag\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\n\r\nimport { AuthContext } from \"../../context/auth\";\r\n\r\n\r\nconst Points = () => {\r\n  let {\r\n    user: { id, email },\r\n  } = useContext(AuthContext);\r\n\r\n  let user = useQuery(FETCH_USER_QUERY, {\r\n    variables: {\r\n      userId: id\r\n    }\r\n  });\r\n\r\n  if (user){\r\n    user = user.data.getUser;\r\n  }\r\n\r\n  return (\r\n    <Text>\r\n      Fall Points: {user ? user.fallPoints : \"0\"}\r\n      {user ? user.fallPercentile : \"0\"} percentile\r\n      Spring Points: {user ? user.springPoints : \"0\"}\r\n      {user ? user.springPercentile : \"0\"} percentile\r\n      Summer Points: {user ? user.summerPoints : \"0\"}\r\n      {user ? user.summerPercentile : \"0\"} percentile\r\n    </Text>\r\n  );\r\n}\r\n\r\nconst FETCH_USER_QUERY = gql`\r\n  query getUser($userId: ID!) {\r\n    getUser(userId: $userId) {\r\n      firstName\r\n      lastName\r\n      points\r\n      fallPoints\r\n      springPoints\r\n      summerPoints\r\n      fallPercentile\r\n      springPercentile\r\n      summerPercentile\r\n      events {\r\n        name\r\n        category\r\n        createdAt\r\n        points\r\n      }\r\n      tasks {\r\n        name\r\n        points\r\n        startDate\r\n      }\r\n      bookmarkedTasks\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Points;\r\n"]},"metadata":{},"sourceType":"module"}