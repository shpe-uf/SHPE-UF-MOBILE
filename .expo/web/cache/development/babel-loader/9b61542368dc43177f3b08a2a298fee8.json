{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\isami\\\\Desktop\\\\CompSciStuff\\\\github\\\\shpe\\\\SHPE-UF-MOBILE\\\\node_modules\\\\react-native-table-component\\\\components\\\\table.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nexport var Table = function (_Component) {\n  _inherits(Table, _Component);\n\n  var _super = _createSuper(Table);\n\n  function Table() {\n    _classCallCheck(this, Table);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Table, [{\n    key: \"_renderChildren\",\n    value: function _renderChildren(props) {\n      return React.Children.map(props.children, function (child) {\n        return React.cloneElement(child, props.borderStyle && child.type.displayName !== 'ScrollView' ? {\n          borderStyle: props.borderStyle\n        } : {});\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var borderStyle = this.props.borderStyle;\n      var borderLeftWidth = borderStyle && borderStyle.borderWidth || 0;\n      var borderBottomWidth = borderLeftWidth;\n      var borderColor = borderStyle && borderStyle.borderColor || '#000';\n      return React.createElement(View, {\n        style: [this.props.style, {\n          borderLeftWidth: borderLeftWidth,\n          borderBottomWidth: borderBottomWidth,\n          borderColor: borderColor\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, this._renderChildren(this.props));\n    }\n  }]);\n\n  return Table;\n}(Component);\nTable.propTypes = {\n  style: ViewPropTypes.style,\n  borderStyle: ViewPropTypes.style\n};\nexport var TableWrapper = function (_Component2) {\n  _inherits(TableWrapper, _Component2);\n\n  var _super2 = _createSuper(TableWrapper);\n\n  function TableWrapper() {\n    _classCallCheck(this, TableWrapper);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(TableWrapper, [{\n    key: \"_renderChildren\",\n    value: function _renderChildren(props) {\n      return React.Children.map(props.children, function (child) {\n        return React.cloneElement(child, props.borderStyle ? {\n          borderStyle: props.borderStyle\n        } : {});\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var style = this.props.style;\n      return React.createElement(View, {\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 12\n        }\n      }, this._renderChildren(this.props));\n    }\n  }]);\n\n  return TableWrapper;\n}(Component);\nTableWrapper.propTypes = {\n  style: ViewPropTypes.style\n};","map":{"version":3,"sources":["C:/Users/isami/Desktop/CompSciStuff/github/shpe/SHPE-UF-MOBILE/node_modules/react-native-table-component/components/table.js"],"names":["React","Component","ViewPropTypes","Table","props","Children","map","children","child","cloneElement","borderStyle","type","displayName","borderLeftWidth","borderWidth","borderBottomWidth","borderColor","style","_renderChildren","propTypes","TableWrapper"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;SACeC,a;AAEf,WAAaC,KAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,oCAMkBC,KANlB,EAMyB;AACrB,aAAOJ,KAAK,CAACK,QAAN,CAAeC,GAAf,CAAmBF,KAAK,CAACG,QAAzB,EAAmC,UAAAC,KAAK;AAAA,eAC7CR,KAAK,CAACS,YAAN,CACED,KADF,EAEEJ,KAAK,CAACM,WAAN,IAAqBF,KAAK,CAACG,IAAN,CAAWC,WAAX,KAA2B,YAAhD,GAA+D;AAAEF,UAAAA,WAAW,EAAEN,KAAK,CAACM;AAArB,SAA/D,GAAoG,EAFtG,CAD6C;AAAA,OAAxC,CAAP;AAMD;AAbH;AAAA;AAAA,6BAeW;AAAA,UACCA,WADD,GACiB,KAAKN,KADtB,CACCM,WADD;AAEP,UAAMG,eAAe,GAAIH,WAAW,IAAIA,WAAW,CAACI,WAA5B,IAA4C,CAApE;AACA,UAAMC,iBAAiB,GAAGF,eAA1B;AACA,UAAMG,WAAW,GAAIN,WAAW,IAAIA,WAAW,CAACM,WAA5B,IAA4C,MAAhE;AAEA,aACE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,CACL,KAAKZ,KAAL,CAAWa,KADN,EAEL;AACEJ,UAAAA,eAAe,EAAfA,eADF;AAEEE,UAAAA,iBAAiB,EAAjBA,iBAFF;AAGEC,UAAAA,WAAW,EAAXA;AAHF,SAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAUG,KAAKE,eAAL,CAAqB,KAAKd,KAA1B,CAVH,CADF;AAcD;AAnCH;;AAAA;AAAA,EAA2BH,SAA3B;AAAaE,K,CACJgB,S,GAAY;AACjBF,EAAAA,KAAK,EAAEf,aAAa,CAACe,KADJ;AAEjBP,EAAAA,WAAW,EAAER,aAAa,CAACe;AAFV,C;AAqCrB,WAAaG,YAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,oCAKkBhB,KALlB,EAKyB;AACrB,aAAOJ,KAAK,CAACK,QAAN,CAAeC,GAAf,CAAmBF,KAAK,CAACG,QAAzB,EAAmC,UAAAC,KAAK;AAAA,eAC7CR,KAAK,CAACS,YAAN,CAAmBD,KAAnB,EAA0BJ,KAAK,CAACM,WAAN,GAAoB;AAAEA,UAAAA,WAAW,EAAEN,KAAK,CAACM;AAArB,SAApB,GAAyD,EAAnF,CAD6C;AAAA,OAAxC,CAAP;AAGD;AATH;AAAA;AAAA,6BAWW;AAAA,UACCO,KADD,GACW,KAAKb,KADhB,CACCa,KADD;AAEP,aAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB,KAAKC,eAAL,CAAqB,KAAKd,KAA1B,CAArB,CAAP;AACD;AAdH;;AAAA;AAAA,EAAkCH,SAAlC;AAAamB,Y,CACJD,S,GAAY;AACjBF,EAAAA,KAAK,EAAEf,aAAa,CAACe;AADJ,C","sourcesContent":["import React, { Component } from 'react';\nimport { View, ViewPropTypes } from 'react-native';\n\nexport class Table extends Component {\n  static propTypes = {\n    style: ViewPropTypes.style,\n    borderStyle: ViewPropTypes.style\n  };\n\n  _renderChildren(props) {\n    return React.Children.map(props.children, child =>\n      React.cloneElement(\n        child,\n        props.borderStyle && child.type.displayName !== 'ScrollView' ? { borderStyle: props.borderStyle } : {}\n      )\n    );\n  }\n\n  render() {\n    const { borderStyle } = this.props;\n    const borderLeftWidth = (borderStyle && borderStyle.borderWidth) || 0;\n    const borderBottomWidth = borderLeftWidth;\n    const borderColor = (borderStyle && borderStyle.borderColor) || '#000';\n\n    return (\n      <View\n        style={[\n          this.props.style,\n          {\n            borderLeftWidth,\n            borderBottomWidth,\n            borderColor\n          }\n        ]}\n      >\n        {this._renderChildren(this.props)}\n      </View>\n    );\n  }\n}\n\nexport class TableWrapper extends Component {\n  static propTypes = {\n    style: ViewPropTypes.style\n  };\n\n  _renderChildren(props) {\n    return React.Children.map(props.children, child =>\n      React.cloneElement(child, props.borderStyle ? { borderStyle: props.borderStyle } : {})\n    );\n  }\n\n  render() {\n    const { style } = this.props;\n    return <View style={style}>{this._renderChildren(this.props)}</View>;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}