{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/julia/SHPE-UF-MOBILE/Pages/Login.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation login($username: String!, $password: String!, $remember: String!) {\\n    login(username: $username, password: $password, remember: $remember) {\\n      id\\n      email\\n      username\\n      createdAt\\n      token\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\nimport { useMutation, gql, useQuery } from \"@apollo/client\";\nimport { useForm, getErrors } from \"../util/hooks\";\n\nfunction Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm(loginUser, {\n    username: \"\",\n    password: \"\",\n    remember: \"false\"\n  }),\n      values = _useForm.values;\n\n  var _useMutation = useMutation(LOGIN_USER, {\n    onError: function onError(err) {\n      getErrors(err);\n    },\n    onCompleted: function onCompleted() {\n      Alert.alert(\"Login Successful!\");\n    },\n    variables: values\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      loginUser = _useMutation2[0];\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.wording,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Enter Username:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"USERNAME\",\n    onChangeText: function onChangeText(value) {\n      return values.username = value;\n    },\n    spellCheck: false,\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.wording,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Enter Password:\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"PASSWORD\",\n    onChangeText: function onChangeText(value) {\n      return values.password = value;\n    },\n    spellCheck: false,\n    autoCorrect: false,\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    color: \"black\",\n    title: \"Login\",\n    onPress: function onPress() {\n      return loginUser();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"Register\",\n    onPress: function onPress() {\n      return navigation.navigate('Register');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"ResetPassword\",\n    onPress: function onPress() {\n      return navigation.navigate('ResetPassword');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    title: \"ViewTasks\",\n    onPress: function onPress() {\n      return navigation.navigate('ViewTasks');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#42A5F5',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    backgroundColor: 'white',\n    color: \"black\",\n    borderRadius: 14,\n    padding: 8,\n    margin: 10,\n    width: 350,\n    height: 55,\n    fontSize: 18\n  },\n  wording: {\n    fontSize: 20,\n    color: 'black'\n  }\n});\nvar LOGIN_USER = gql(_templateObject());\nexport default Login;","map":{"version":3,"sources":["/Users/julia/SHPE-UF-MOBILE/Pages/Login.js"],"names":["React","KeyboardAwareScrollView","useMutation","gql","useQuery","useForm","getErrors","Login","navigation","loginUser","username","password","remember","values","LOGIN_USER","onError","err","onCompleted","Alert","alert","variables","styles","container","Keyboard","dismiss","wording","input","value","navigate","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderWidth","color","borderRadius","padding","margin","width","height","fontSize"],"mappings":"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","sourcesContent":["import  React from 'react';\nimport { TouchableWithoutFeedback, TextInput, Text, StyleSheet, SafeAreaView, Keyboard, Button, Alert } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\nimport { useMutation, gql, useQuery } from \"@apollo/client\";\nimport { useForm, getErrors } from \"../util/hooks\";\n\nfunction Login({navigation}) {\n    const { values } = useForm(loginUser, {\n        username: \"\",\n        password: \"\",\n        remember: \"false\"\n      });\n\n    const [loginUser] = useMutation(LOGIN_USER, {\n      onError(err) {\n        getErrors(err);\n      },\n\n      onCompleted() {\n        Alert.alert(\"Login Successful!\");\n      },\n\n      variables: values\n    });\n\n    return (\n      <SafeAreaView\n            style={styles.container}\n        >\n          <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n          <KeyboardAwareScrollView>\n          <Text style={styles.wording}>Enter Username:</Text>\n          <TextInput\n              style={styles.input}\n              placeholder='USERNAME'\n              onChangeText={(value) => values.username = value}\n              spellCheck= {false}\n              autoCorrect={false}\n              autoCapitalize='none'\n          />\n          <Text style={styles.wording}>Enter Password:</Text>\n          <TextInput\n              style={styles.input}\n              placeholder='PASSWORD'\n              onChangeText={(value) => values.password = value}\n              spellCheck= {false}\n              autoCorrect={false}\n              secureTextEntry={true}\n              autoCapitalize='none'\n          />\n          <Button\n              color='black'\n              title=\"Login\"\n              onPress={() => loginUser()}\n          />\n          <Button\n              title=\"Register\"\n              onPress={() => navigation.navigate('Register')}\n          />\n          <Button\n              title=\"ResetPassword\"\n              onPress={() => navigation.navigate('ResetPassword')}\n          />\n          <Button\n              title=\"ViewTasks\"\n              onPress={() => navigation.navigate('ViewTasks')}\n          />\n          </KeyboardAwareScrollView>\n        </TouchableWithoutFeedback>\n      </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#42A5F5',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    input: {\n        borderWidth: 1,\n        backgroundColor: 'white',\n        color: \"black\",\n        borderRadius: 14,\n        padding: 8,\n        margin: 10,\n        width: 350,\n        height: 55,\n        fontSize: 18,\n    },\n    wording: {\n        fontSize: 20,\n        color: 'black',\n    },\n});\n\nconst LOGIN_USER = gql`\n  mutation login($username: String!, $password: String!, $remember: String!) {\n    login(username: $username, password: $password, remember: $remember) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}