{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\SHPE-UF-MOBILE\\\\Pages\\\\Register.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation register(\\n    $firstName: String!\\n    $lastName: String!\\n    $major: String!\\n    $year: String!\\n    $graduating: String!\\n    $country: String!\\n    $ethnicity: String!\\n    $sex: String!\\n    $username: String!\\n    $email: String!\\n    $password: String!\\n    $confirmPassword: String!\\n    $listServ: String!\\n  ) {\\n    register(\\n      registerInput: {\\n        firstName: $firstName\\n        lastName: $lastName\\n        major: $major\\n        year: $year\\n        graduating: $graduating\\n        country: $country\\n        ethnicity: $ethnicity\\n        sex: $sex\\n        username: $username\\n        email: $email\\n        password: $password\\n        confirmPassword: $confirmPassword\\n        listServ: $listServ\\n      }\\n    ) {\\n      id\\n      email\\n      username\\n      createdAt\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { useMutation, gql } from \"@apollo/client\";\nimport { useForm, getErrors } from \"../util/hooks\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\nimport RNPickerSelect from 'react-native-picker-select';\nimport majorOptions from \"../assets/options/major.json\";\nimport yearOptions from \"../assets/options/year.json\";\nimport graduatingOptions from \"../assets/options/graduating.json\";\nimport countryOptions from \"../assets/options/country.json\";\nimport ethnicityOptions from \"../assets/options/ethnicity.json\";\nimport sexOptions from \"../assets/options/sex.json\";\n\nfunction Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useForm = useForm(addUser, {\n    firstName: \"\",\n    lastName: \"\",\n    major: \"\",\n    ethnicity: \"\",\n    graduating: \"\",\n    country: \"\",\n    year: \"\",\n    sex: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    listServ: \"false\"\n  }),\n      values = _useForm.values;\n\n  var _useMutation = useMutation(REGISTER_USER, {\n    onError: function onError(err) {\n      getErrors(err);\n    },\n    onCompleted: function onCompleted() {\n      Alert.alert(\"Registration Successful!\");\n      navigation.navigate('Login');\n    },\n    variables: values\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      addUser = _useMutation2[0];\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"First Name\",\n    onChangeText: function onChangeText(text) {\n      values.firstName = text;\n    },\n    spellCheck: false,\n    autoCorrect: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Last Name\",\n    onChangeText: function onChangeText(text) {\n      values.lastName = text;\n    },\n    spellCheck: false,\n    autoCorrect: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }), React.createElement(RNPickerSelect, {\n    placeholder: {\n      label: 'Major',\n      value: null,\n      color: '#9EA0A4'\n    },\n    style: {\n      inputIOS: styles.input\n    },\n    onValueChange: function onValueChange(value) {\n      return values.major = value;\n    },\n    items: majorOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), React.createElement(RNPickerSelect, {\n    placeholder: {\n      label: 'Year',\n      value: null,\n      color: '#9EA0A4'\n    },\n    style: {\n      inputIOS: styles.input\n    },\n    onValueChange: function onValueChange(value) {\n      return values.year = value;\n    },\n    items: yearOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }), React.createElement(RNPickerSelect, {\n    placeholder: {\n      label: 'Graduating this year?',\n      value: null,\n      color: '#9EA0A4'\n    },\n    style: {\n      inputIOS: styles.input\n    },\n    onValueChange: function onValueChange(value) {\n      return values.graduating = value;\n    },\n    items: graduatingOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }), React.createElement(RNPickerSelect, {\n    placeholder: {\n      label: 'Country of Origin',\n      value: null,\n      color: '#9EA0A4'\n    },\n    style: {\n      inputIOS: styles.input\n    },\n    onValueChange: function onValueChange(value) {\n      return values.country = value;\n    },\n    items: countryOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), React.createElement(RNPickerSelect, {\n    placeholder: {\n      label: 'Ethnicity',\n      value: null,\n      color: '#9EA0A4'\n    },\n    style: {\n      inputIOS: styles.input\n    },\n    onValueChange: function onValueChange(value) {\n      return values.ethnicity = value;\n    },\n    items: ethnicityOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }), React.createElement(RNPickerSelect, {\n    placeholder: {\n      label: 'Sex',\n      value: null,\n      color: '#9EA0A4'\n    },\n    style: {\n      inputIOS: styles.input\n    },\n    onValueChange: function onValueChange(value) {\n      return values.sex = value;\n    },\n    items: sexOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Username\",\n    onChangeText: function onChangeText(text) {\n      values.username = text;\n    },\n    spellCheck: false,\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"UF/SF Email\",\n    onChangeText: function onChangeText(text) {\n      values.email = text;\n    },\n    spellCheck: false,\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      values.password = text;\n    },\n    spellCheck: false,\n    autoCorrect: false,\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Confirm Password\",\n    onChangeText: function onChangeText(text) {\n      values.confirmPassword = text;\n    },\n    spellCheck: false,\n    autoCorrect: false,\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    title: \"Submit\",\n    onPress: function onPress() {\n      return addUser();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }), React.createElement(Button, {\n    title: \"Already Registered?\",\n    onPress: function onPress() {\n      return navigation.navigate('Login');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  input: {\n    width: 350,\n    height: 55,\n    backgroundColor: 'white',\n    margin: 10,\n    padding: 8,\n    color: 'black',\n    borderRadius: 14,\n    fontSize: 18,\n    fontWeight: '500'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#42A5F5'\n  }\n});\nvar pickerStyles = StyleSheet.create({\n  inputIOS: {\n    width: 350,\n    height: 55,\n    backgroundColor: 'white',\n    margin: 10,\n    padding: 8,\n    color: 'black',\n    borderRadius: 14,\n    fontSize: 18,\n    fontWeight: '500'\n  },\n  inputAndroid: {\n    color: 'white'\n  }\n});\nvar REGISTER_USER = gql(_templateObject());\nexport default Register;","map":{"version":3,"sources":["C:/Users/hp/Desktop/SHPE-UF-MOBILE/Pages/Register.js"],"names":["React","useMutation","gql","useForm","getErrors","KeyboardAwareScrollView","RNPickerSelect","majorOptions","yearOptions","graduatingOptions","countryOptions","ethnicityOptions","sexOptions","Register","navigation","addUser","firstName","lastName","major","ethnicity","graduating","country","year","sex","username","email","password","confirmPassword","listServ","values","REGISTER_USER","onError","err","onCompleted","Alert","alert","navigate","variables","styles","container","Keyboard","dismiss","input","text","label","value","color","inputIOS","flex","StyleSheet","create","width","height","backgroundColor","margin","padding","borderRadius","fontSize","fontWeight","justifyContent","alignItems","pickerStyles","inputAndroid"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { useForm, getErrors } from \"../util/hooks\";\r\nimport { View, TouchableWithoutFeedback, TextInput, StyleSheet, SafeAreaView, Keyboard, Button, Alert } from 'react-native';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\r\nimport RNPickerSelect from 'react-native-picker-select';\r\n\r\nimport majorOptions from \"../assets/options/major.json\";\r\nimport yearOptions from \"../assets/options/year.json\";\r\nimport graduatingOptions from \"../assets/options/graduating.json\";\r\nimport countryOptions from \"../assets/options/country.json\";\r\nimport ethnicityOptions from \"../assets/options/ethnicity.json\";\r\nimport sexOptions from \"../assets/options/sex.json\";\r\n\r\n\r\nfunction Register({navigation}) {\r\n    const { values } = useForm(addUser, {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        major: \"\",\r\n        ethnicity: \"\",\r\n        graduating: \"\",\r\n        country: \"\",\r\n        year: \"\",\r\n        sex: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n        listServ: \"false\"\r\n    });\r\n\r\n    const [addUser] = useMutation(REGISTER_USER, {\r\n        onError(err) {\r\n            getErrors(err);\r\n        },\r\n\r\n        onCompleted() {\r\n            Alert.alert(\"Registration Successful!\");\r\n            navigation.navigate('Login');\r\n        },\r\n\r\n        variables: values\r\n    });\r\n\r\n    return (\r\n        <SafeAreaView \r\n            style={styles.container}\r\n        >\r\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n                <KeyboardAwareScrollView>\r\n                    <TextInput \r\n                        style={styles.input}\r\n                        placeholder='First Name'\r\n                        onChangeText={text => {\r\n                            values.firstName = text;\r\n                        }}\r\n                        spellCheck={false}\r\n                        autoCorrect={false}\r\n                    />\r\n                    <TextInput \r\n                        style={styles.input}\r\n                        placeholder='Last Name'\r\n                        onChangeText={text => {\r\n                            values.lastName = text;\r\n                        }}\r\n                        spellCheck={false}\r\n                        autoCorrect={false}\r\n                    />\r\n                    <RNPickerSelect\r\n                        placeholder={{\r\n                            label: 'Major',\r\n                            value: null,\r\n                            color: '#9EA0A4',\r\n                        }}\r\n                        style={{inputIOS: styles.input}}\r\n                        onValueChange={(value) => values.major = value}\r\n                        items={majorOptions}\r\n                    />\r\n                    <RNPickerSelect\r\n                        placeholder={{\r\n                            label: 'Year',\r\n                            value: null,\r\n                            color: '#9EA0A4',\r\n                        }}\r\n                        style={{inputIOS: styles.input}}\r\n                        onValueChange={(value) => values.year = value}\r\n                        items={yearOptions}\r\n                    />\r\n                    <RNPickerSelect\r\n                        placeholder={{\r\n                            label: 'Graduating this year?',\r\n                            value: null,\r\n                            color: '#9EA0A4',\r\n                        }}\r\n                        style={{inputIOS: styles.input}}\r\n                        onValueChange={(value) => values.graduating = value}\r\n                        items={graduatingOptions}\r\n                    />\r\n                    <RNPickerSelect\r\n                        placeholder={{\r\n                            label: 'Country of Origin',\r\n                            value: null,\r\n                            color: '#9EA0A4',\r\n                        }}\r\n                        style={{inputIOS: styles.input}}\r\n                        onValueChange={(value) => values.country = value}\r\n                        items={countryOptions}\r\n                    />\r\n                    <RNPickerSelect\r\n                        placeholder={{\r\n                            label: 'Ethnicity',\r\n                            value: null,\r\n                            color: '#9EA0A4',\r\n                        }}\r\n                        style={{inputIOS: styles.input}}\r\n                        onValueChange={(value) => values.ethnicity = value}\r\n                        items={ethnicityOptions}\r\n                    />\r\n                    <RNPickerSelect\r\n                        placeholder={{\r\n                            label: 'Sex',\r\n                            value: null,\r\n                            color: '#9EA0A4',\r\n                        }}\r\n                        style={{inputIOS: styles.input}}\r\n                        onValueChange={(value) => values.sex = value}\r\n                        items={sexOptions}\r\n                    />\r\n                    <TextInput \r\n                        style={styles.input}\r\n                        placeholder='Username'\r\n                        onChangeText={text => {\r\n                            values.username = text;\r\n                        }}\r\n                        spellCheck={false}\r\n                        autoCorrect={false}\r\n                        autoCapitalize='none'\r\n                    />\r\n                    <TextInput \r\n                        style={styles.input}\r\n                        placeholder='UF/SF Email'\r\n                        onChangeText={text => {\r\n                            values.email = text;\r\n                        }}\r\n                        spellCheck={false}\r\n                        autoCorrect={false}\r\n                        autoCapitalize='none'\r\n                    />\r\n                    <TextInput \r\n                        style={styles.input}\r\n                        placeholder='Password'\r\n                        onChangeText={text => {\r\n                            values.password = text;\r\n                        }}\r\n                        spellCheck={false}\r\n                        autoCorrect={false}\r\n                        secureTextEntry={true}\r\n                        autoCapitalize='none'\r\n                    />\r\n                    <TextInput \r\n                        style={styles.input}\r\n                        placeholder='Confirm Password'\r\n                        onChangeText={text => {\r\n                            values.confirmPassword = text;\r\n                        }}\r\n                        spellCheck={false}\r\n                        autoCorrect={false}\r\n                        secureTextEntry={true}\r\n                        autoCapitalize='none'\r\n                    />\r\n\r\n                    <View>\r\n                        <Button \r\n                            title=\"Submit\"\r\n                            onPress={() => addUser()}\r\n                        />\r\n                        <Button \r\n                            title=\"Already Registered?\"\r\n                            onPress={() => navigation.navigate('Login')}\r\n                        />\r\n                    </View>\r\n                    <View style={{ flex : 1 }} />\r\n                </KeyboardAwareScrollView>\r\n            </TouchableWithoutFeedback>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n        width: 350,\r\n        height: 55,\r\n        backgroundColor: 'white',\r\n        margin: 10,\r\n        padding: 8,\r\n        color: 'black',\r\n        borderRadius: 14,\r\n        fontSize: 18,\r\n        fontWeight: '500',\r\n      },\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#42A5F5',\r\n      }\r\n  });\r\n\r\nconst pickerStyles = StyleSheet.create({\r\n    inputIOS: {\r\n        width: 350,\r\n        height: 55,\r\n        backgroundColor: 'white',\r\n        margin: 10,\r\n        padding: 8,\r\n        color: 'black',\r\n        borderRadius: 14,\r\n        fontSize: 18,\r\n        fontWeight: '500',\r\n    },\r\n    inputAndroid: {\r\n        color: 'white'\r\n    }\r\n});\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $major: String!\r\n    $year: String!\r\n    $graduating: String!\r\n    $country: String!\r\n    $ethnicity: String!\r\n    $sex: String!\r\n    $username: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n    $listServ: String!\r\n  ) {\r\n    register(\r\n      registerInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        major: $major\r\n        year: $year\r\n        graduating: $graduating\r\n        country: $country\r\n        ethnicity: $ethnicity\r\n        sex: $sex\r\n        username: $username\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n        listServ: $listServ\r\n      }\r\n    ) {\r\n      id\r\n      email\r\n      username\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}