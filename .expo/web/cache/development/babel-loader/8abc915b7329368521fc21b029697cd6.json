{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\isami\\\\Desktop\\\\CompSciStuff\\\\github\\\\shpe\\\\SHPE-UF-MOBILE\\\\Pages\\\\Points.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query getUser($userId: ID!) {\\n    getUser(userId: $userId) {\\n      firstName\\n      lastName\\n      points\\n      fallPoints\\n      springPoints\\n      summerPoints\\n      fallPercentile\\n      springPercentile\\n      summerPercentile\\n      events {\\n        name\\n        category\\n        createdAt\\n        points\\n      }\\n      tasks {\\n        name\\n        points\\n        startDate\\n      }\\n      bookmarkedTasks\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\n\nvar Points = function Points(_ref) {\n  var user = _ref.user;\n  return function (user) {\n    var _useQuery = useQuery(FETCH_USER_QUERY, {\n      variables: {\n        userId: \"5f90e4d4920bab09f6df0106\"\n      }\n    }),\n        data = _useQuery.data,\n        refetch = _useQuery.refetch;\n\n    if (data) {\n      var user = data.getUser;\n    }\n\n    return React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, \"Fall Points: \", user ? user.fallPoints : \"0\");\n  }(user);\n};\n\nvar FETCH_USER_QUERY = gql(_templateObject());\nexport default Points;","map":{"version":3,"sources":["C:/Users/isami/Desktop/CompSciStuff/github/shpe/SHPE-UF-MOBILE/Pages/Points.js"],"names":["React","Points","user","useQuery","FETCH_USER_QUERY","variables","userId","data","refetch","getUser","fallPoints","gql"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,yBAAc;AAAA,oBAOHC,QAAQ,CAACC,gBAAD,EAAmB;AAC/CC,MAAAA,SAAS,EAAE;AACTC,QAAAA,MAAM,EAAE;AADC;AADoC,KAAnB,CAPL;AAAA,QAOpBC,IAPoB,aAOpBA,IAPoB;AAAA,QAOdC,OAPc,aAOdA,OAPc;;AAazB,QAAGD,IAAH,EAAQ;AACN,UAAIL,IAAI,GAAGK,IAAI,CAACE,OAAhB;AACD;;AACH,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACgBP,IAAI,GAAGA,IAAI,CAACQ,UAAR,GAAqB,GADzC,CADF;AAKD,GArBc;AAAA,CAAf;;AAuBA,IAAMN,gBAAgB,GAAGO,GAAH,mBAAtB;AA4BA,eAAeV,MAAf","sourcesContent":["import React from 'react';\r\nimport { Text } from 'react-native';\r\n\r\nconst Points = ({ user }) => {\r\n  /*  var {\r\n      user: { id, username }\r\n    } = useContext(AuthContext);\r\n    */\r\n  /*  var id = \"5f90e4d4920bab09f6df0106\"; */\r\n\r\n    var {data, refetch} = useQuery(FETCH_USER_QUERY, {\r\n      variables: {\r\n        userId: \"5f90e4d4920bab09f6df0106\"\r\n      }\r\n    });\r\n\r\n    if(data){\r\n      var user = data.getUser;\r\n    }\r\n  return (\r\n    <Text>\r\n      Fall Points: {user ? user.fallPoints : \"0\"}\r\n    </Text>\r\n  );\r\n}\r\n\r\nconst FETCH_USER_QUERY = gql`\r\n  query getUser($userId: ID!) {\r\n    getUser(userId: $userId) {\r\n      firstName\r\n      lastName\r\n      points\r\n      fallPoints\r\n      springPoints\r\n      summerPoints\r\n      fallPercentile\r\n      springPercentile\r\n      summerPercentile\r\n      events {\r\n        name\r\n        category\r\n        createdAt\r\n        points\r\n      }\r\n      tasks {\r\n        name\r\n        points\r\n        startDate\r\n      }\r\n      bookmarkedTasks\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Points;\r\n"]},"metadata":{},"sourceType":"module"}