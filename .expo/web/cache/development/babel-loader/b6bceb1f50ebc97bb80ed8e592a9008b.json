{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"/Users/julia/SHPE-UF-MOBILE/Pages/ViewTasks.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query getUser($userId: ID!) {\\n    getUser(userId: $userId) {\\n      firstName\\n      lastName\\n      points\\n      fallPoints\\n      springPoints\\n      summerPoints\\n      fallPercentile\\n      springPercentile\\n      summerPercentile\\n      events {\\n        name\\n        category\\n        createdAt\\n        points\\n      }\\n      tasks {\\n        name\\n        points\\n        startDate\\n      }\\n      bookmarkedTasks\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation forgotPassword($email: String!) {\\n    forgotPassword(email: $email) {\\n      id\\n      email\\n      username\\n      createdAt\\n      token\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\nimport { useForm, getErrors } from \"../util/hooks\";\n\nfunction Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useQuery = useQuery(FETCH_USER_QUERY, {\n    variables: {\n      userId: \"5fb2faa33945aa36700adfd0\"\n    }\n  }),\n      data = _useQuery.data;\n\n  if (data) {\n    var user = data.getUser;\n    console.log(user);\n  }\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Email\",\n    onChangeText: function onChangeText(text) {\n      return values.email = text;\n    },\n    spellCheck: false,\n    autoCorrect: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#42A5F5',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    backgroundColor: 'white',\n    color: \"black\",\n    borderRadius: 14,\n    padding: 8,\n    margin: 10,\n    width: 350,\n    height: 55,\n    fontSize: 18\n  },\n  wording: {\n    fontSize: 20,\n    color: 'black'\n  }\n});\nvar FORGOT_PASSWORD = gql(_templateObject());\nvar FETCH_USER_QUERY = gql(_templateObject2());\nexport default Login;","map":{"version":3,"sources":["/Users/julia/SHPE-UF-MOBILE/Pages/ViewTasks.js"],"names":["React","KeyboardAwareScrollView","useMutation","useQuery","gql","useForm","getErrors","Login","navigation","FETCH_USER_QUERY","variables","userId","data","user","getUser","console","log","styles","container","Keyboard","dismiss","input","text","values","email","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","borderWidth","color","borderRadius","padding","margin","width","height","fontSize","wording","FORGOT_PASSWORD"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAQA,KAAR,MAAmB,OAAnB;;;;;;;;AAEA,SAASC,uBAAT,QAAwC,wCAAxC;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,GAAhC,QAA2C,gBAA3C;AACA,SAASC,OAAT,EAAkBC,SAAlB;;AAEA,SAASC,KAAT,OAA6B;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAAA,kBAGVL,QAAQ,CAACM,gBAAD,EAAmB;AACxCC,IAAAA,SAAS,EAAE;AACTC,MAAAA,MAAM,EAAE;AADC;AAD6B,GAAnB,CAHE;AAAA,MAGnBC,IAHmB,aAGnBA,IAHmB;;AAQzB,MAAGA,IAAH,EAAQ;AACN,QAAIC,IAAI,GAAGD,IAAI,CAACE,OAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD;;AAED,SACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAGI,MAAM,CAACC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEC,QAAQ,CAACC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAEH,MAAM,CAACI,KADlB;AAEI,IAAA,WAAW,EAAC,OAFhB;AAGI,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aACdC,MAAM,CAACC,KAAP,GAAeF,IADD;AAAA,KAHtB;AAMI,IAAA,UAAU,EAAE,KANhB;AAOI,IAAA,WAAW,EAAE,KAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ,CADJ;AAkBH;;AAED,IAAML,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,SAAS,EAAE;AACPS,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,SAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT,GADkB;AAO7BT,EAAAA,KAAK,EAAE;AACHU,IAAAA,WAAW,EAAE,CADV;AAEHH,IAAAA,eAAe,EAAE,OAFd;AAGHI,IAAAA,KAAK,EAAE,OAHJ;AAIHC,IAAAA,YAAY,EAAE,EAJX;AAKHC,IAAAA,OAAO,EAAE,CALN;AAMHC,IAAAA,MAAM,EAAE,EANL;AAOHC,IAAAA,KAAK,EAAE,GAPJ;AAQHC,IAAAA,MAAM,EAAE,EARL;AASHC,IAAAA,QAAQ,EAAE;AATP,GAPsB;AAkB7BC,EAAAA,OAAO,EAAE;AACLD,IAAAA,QAAQ,EAAE,EADL;AAELN,IAAAA,KAAK,EAAE;AAFF;AAlBoB,CAAlB,CAAf;AAwBA,IAAMQ,eAAe,GAAGpC,GAAH,mBAArB;AAYA,IAAMK,gBAAgB,GAAGL,GAAH,oBAAtB;AA4BA,eAAeG,KAAf","sourcesContent":["import  React from 'react';\nimport { TouchableWithoutFeedback, TextInput, StyleSheet, SafeAreaView, Keyboard, Button, Alert } from 'react-native';\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\nimport { useForm, getErrors } from \"../util/hooks\";\n\nfunction Login({navigation}) {\n\n\n    let { data } = useQuery(FETCH_USER_QUERY, {\n      variables: {\n        userId: \"5fb2faa33945aa36700adfd0\", // dummy user for now\n      },\n    });\n    if(data){\n      let user = data.getUser;\n      console.log(user);\n    }\n\n    return (\n        <SafeAreaView style ={styles.container}>\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\n                <KeyboardAwareScrollView>\n                    <TextInput\n                        style={styles.input}\n                        placeholder='Email'\n                        onChangeText={text =>\n                            values.email = text\n                        }\n                        spellCheck={false}\n                        autoCorrect={false}\n                        />\n                        \n                </KeyboardAwareScrollView>\n            </TouchableWithoutFeedback>\n        </SafeAreaView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#42A5F5',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    input: {\n        borderWidth: 1,\n        backgroundColor: 'white',\n        color: \"black\",\n        borderRadius: 14,\n        padding: 8,\n        margin: 10,\n        width: 350,\n        height: 55,\n        fontSize: 18,\n    },\n    wording: {\n        fontSize: 20,\n        color: 'black',\n    },\n});\n\nconst FORGOT_PASSWORD = gql`\n  mutation forgotPassword($email: String!) {\n    forgotPassword(email: $email) {\n      id\n      email\n      username\n      createdAt\n      token\n    }\n  }\n`;\n\nconst FETCH_USER_QUERY = gql`\n  query getUser($userId: ID!) {\n    getUser(userId: $userId) {\n      firstName\n      lastName\n      points\n      fallPoints\n      springPoints\n      summerPoints\n      fallPercentile\n      springPercentile\n      summerPercentile\n      events {\n        name\n        category\n        createdAt\n        points\n      }\n      tasks {\n        name\n        points\n        startDate\n      }\n      bookmarkedTasks\n    }\n  }\n`;\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}