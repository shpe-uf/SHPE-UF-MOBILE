{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/covie/Desktop/SHPE_Mobile/SHPE-UF-MOBILE/Pages/Register.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  mutation register(\\n    $firstName: String!\\n    $lastName: String!\\n    $major: String!\\n    $year: String!\\n    $graduating: String!\\n    $country: String!\\n    $ethnicity: String!\\n    $sex: String!\\n    $username: String!\\n    $email: String!\\n    $password: String!\\n    $confirmPassword: String!\\n    $listServ: String!\\n  ) {\\n    register(\\n      registerInput: {\\n        firstName: $firstName\\n        lastName: $lastName\\n        major: $major\\n        year: $year\\n        graduating: $graduating\\n        country: $country\\n        ethnicity: $ethnicity\\n        sex: $sex\\n        username: $username\\n        email: $email\\n        password: $password\\n        confirmPassword: $confirmPassword\\n        listServ: $listServ\\n      }\\n    ) {\\n      id\\n      email\\n      username\\n      createdAt\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from 'react';\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\nimport { useForm } from \"react-hook-form\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\nimport RNPickerSelect from 'react-native-picker-select';\nimport majorOptions from \"../assets/options/major.json\";\nimport yearOptions from \"../assets/options/year.json\";\nimport graduatingOptions from \"../assets/options/graduating.json\";\nimport countryOptions from \"../assets/options/country.json\";\nimport ethnicityOptions from \"../assets/options/ethnicity.json\";\nimport sexOptions from \"../assets/options/sex.json\";\n\nfunction Register() {\n  function onSubmit(data) {\n    addUser({\n      variables: {\n        firstName: data.firstName,\n        lastName: data.lastName,\n        major: data.major,\n        ethnicity: data.ethnicity,\n        graduating: data.graduating,\n        country: data.country,\n        year: data.year,\n        sex: data.sex,\n        username: data.username,\n        email: data.email,\n        password: data.password,\n        confirmPassword: data.confirmPassword,\n        listServ: \"false\"\n      }\n    }).catch(function (err) {\n      return err.graphQLErrors[0].extensions.exception.errors;\n    }).then(function (errors) {\n      if (errors && !errors.data) {\n        var errorString = \"\";\n        var errorArray = Object.values(errors);\n        errorArray.map(function (error) {\n          errorString += error;\n\n          if (error != errorArray[errorArray.length - 1]) {\n            errorString += \"\\n\";\n          }\n        });\n        Alert.alert(errorString);\n      } else {\n        Alert.alert(\"Thank you for registering \" + data.firstName + \"!\");\n      }\n    });\n  }\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      setValue = _useForm.setValue;\n\n  useEffect(function () {\n    register('firstName');\n    setValue('firstName', \"\");\n    register('lastName');\n    setValue('lastName', \"\");\n    register('major');\n    setValue('major', \"\");\n    register('year');\n    setValue('year', \"\");\n    register('graduating');\n    setValue('graduating', \"\");\n    register('country');\n    setValue('country', \"\");\n    register('ethnicity');\n    setValue('ethnicity', \"\");\n    register('sex');\n    setValue('sex', \"\");\n    register('username');\n    setValue('username', \"\");\n    register('email');\n    setValue('email', \"\");\n    register('password');\n    setValue('password', \"\");\n    register('confirmPassword');\n    setValue('confirmPassword', \"\");\n  }, [register]);\n\n  var _useMutation = useMutation(REGISTER_USER),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      addUser = _useMutation2[0],\n      loading = _useMutation2[1].loading;\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"First Name\",\n    onChangeText: function onChangeText(text) {\n      setValue('firstName', text);\n    },\n    spellCheck: false,\n    autoCorrect: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Last Name\",\n    onChangeText: function onChangeText(text) {\n      setValue('lastName', text);\n    },\n    spellCheck: false,\n    autoCorrect: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }), React.createElement(RNPickerSelect, {\n    placeholder: {\n      label: 'Major',\n      value: null,\n      color: '#9EA0A4'\n    },\n    style: {\n      inputIOS: styles.input\n    },\n    onValueChange: function onValueChange(value) {\n      return setValue('major', value);\n    },\n    items: majorOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }), React.createElement(RNPickerSelect, {\n    placeholder: {\n      label: 'Year',\n      value: null,\n      color: '#9EA0A4'\n    },\n    style: {\n      inputIOS: styles.input\n    },\n    onValueChange: function onValueChange(value) {\n      return setValue('year', value);\n    },\n    items: yearOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }), React.createElement(RNPickerSelect, {\n    placeholder: {\n      label: 'Graduating this year?',\n      value: null,\n      color: '#9EA0A4'\n    },\n    style: {\n      inputIOS: styles.input\n    },\n    onValueChange: function onValueChange(value) {\n      return setValue('graduating', value);\n    },\n    items: graduatingOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }), React.createElement(RNPickerSelect, {\n    placeholder: {\n      label: 'Country of Origin',\n      value: null,\n      color: '#9EA0A4'\n    },\n    style: {\n      inputIOS: styles.input\n    },\n    onValueChange: function onValueChange(value) {\n      return setValue('country', value);\n    },\n    items: countryOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }), React.createElement(RNPickerSelect, {\n    placeholder: {\n      label: 'Ethnicity',\n      value: null,\n      color: '#9EA0A4'\n    },\n    style: {\n      inputIOS: styles.input\n    },\n    onValueChange: function onValueChange(value) {\n      return setValue('ethnicity', value);\n    },\n    items: ethnicityOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }), React.createElement(RNPickerSelect, {\n    placeholder: {\n      label: 'Sex',\n      value: null,\n      color: '#9EA0A4'\n    },\n    style: {\n      inputIOS: styles.input\n    },\n    onValueChange: function onValueChange(value) {\n      return setValue('sex', value);\n    },\n    items: sexOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Username\",\n    onChangeText: function onChangeText(text) {\n      setValue('username', text);\n    },\n    spellCheck: false,\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"UF/SF Email\",\n    onChangeText: function onChangeText(text) {\n      setValue('email', text);\n    },\n    spellCheck: false,\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      setValue('password', text);\n    },\n    spellCheck: false,\n    autoCorrect: false,\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Confirm Password\",\n    onChangeText: function onChangeText(text) {\n      setValue('confirmPassword', text);\n    },\n    spellCheck: false,\n    autoCorrect: false,\n    secureTextEntry: true,\n    autoCapitalize: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 21\n    }\n  }, React.createElement(Button, {\n    title: \"Submit\",\n    onPress: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  input: {\n    width: 350,\n    height: 55,\n    backgroundColor: 'white',\n    margin: 10,\n    padding: 8,\n    color: 'black',\n    borderRadius: 14,\n    fontSize: 18,\n    fontWeight: '500'\n  },\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#42A5F5'\n  }\n});\nvar pickerStyles = StyleSheet.create({\n  inputIOS: {\n    width: 350,\n    height: 55,\n    backgroundColor: 'white',\n    margin: 10,\n    padding: 8,\n    color: 'black',\n    borderRadius: 14,\n    fontSize: 18,\n    fontWeight: '500'\n  },\n  inputAndroid: {\n    color: 'white'\n  }\n});\nvar REGISTER_USER = gql(_templateObject());\nexport default Register;","map":{"version":3,"sources":["/mnt/c/Users/covie/Desktop/SHPE_Mobile/SHPE-UF-MOBILE/Pages/Register.js"],"names":["React","useEffect","useState","useMutation","useQuery","gql","useForm","KeyboardAwareScrollView","RNPickerSelect","majorOptions","yearOptions","graduatingOptions","countryOptions","ethnicityOptions","sexOptions","Register","onSubmit","data","addUser","variables","firstName","lastName","major","ethnicity","graduating","country","year","sex","username","email","password","confirmPassword","listServ","catch","err","graphQLErrors","extensions","exception","errors","then","errorString","errorArray","Object","values","map","error","length","Alert","alert","register","handleSubmit","setValue","REGISTER_USER","loading","styles","container","Keyboard","dismiss","input","text","label","value","color","inputIOS","flex","StyleSheet","create","width","height","backgroundColor","margin","padding","borderRadius","fontSize","fontWeight","justifyContent","alignItems","pickerStyles","inputAndroid"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { View, TouchableWithoutFeedback, TextInput, StyleSheet, SafeAreaView, Keyboard, Button, Alert } from 'react-native';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\r\nimport RNPickerSelect from 'react-native-picker-select';\r\n\r\nimport majorOptions from \"../assets/options/major.json\";\r\nimport yearOptions from \"../assets/options/year.json\";\r\nimport graduatingOptions from \"../assets/options/graduating.json\";\r\nimport countryOptions from \"../assets/options/country.json\";\r\nimport ethnicityOptions from \"../assets/options/ethnicity.json\";\r\nimport sexOptions from \"../assets/options/sex.json\";\r\n\r\nfunction Register() {\r\n\r\n    function onSubmit(data){\r\n        //console.log(data);\r\n        addUser({\r\n            variables: {\r\n                firstName: data.firstName,\r\n                lastName: data.lastName,\r\n                major: data.major,\r\n                ethnicity: data.ethnicity,\r\n                graduating: data.graduating,\r\n                country: data.country,\r\n                year: data.year,\r\n                sex: data.sex,\r\n                username: data.username,\r\n                email: data.email,\r\n                password: data.password,\r\n                confirmPassword: data.confirmPassword,\r\n                listServ: \"false\"\r\n            }\r\n        }).catch((err) => {return err.graphQLErrors[0].extensions.exception.errors;}).then((errors) => {\r\n            if (errors && !errors.data){\r\n                var errorString = \"\";\r\n                \r\n                const errorArray = Object.values(errors);\r\n\r\n                errorArray.map(error => {\r\n                    errorString += (error);\r\n\r\n                    if (error != errorArray[errorArray.length - 1]){\r\n                        errorString += \"\\n\";\r\n                    }\r\n                })\r\n\r\n                Alert.alert(errorString);\r\n            } else {\r\n                Alert.alert(\"Thank you for registering \" + data.firstName + \"!\");\r\n            }\r\n        })\r\n    }\r\n\r\n    const { register, handleSubmit, setValue } = useForm();\r\n\r\n    useEffect(() => {\r\n        register('firstName');\r\n        setValue('firstName', \"\");\r\n        register('lastName');\r\n        setValue('lastName', \"\");\r\n        register('major');\r\n        setValue('major', \"\");\r\n        register('year');\r\n        setValue('year', \"\");\r\n        register('graduating');\r\n        setValue('graduating', \"\");\r\n        register('country');\r\n        setValue('country', \"\");\r\n        register('ethnicity');\r\n        setValue('ethnicity', \"\");\r\n        register('sex');\r\n        setValue('sex', \"\");\r\n        register('username');\r\n        setValue('username', \"\");\r\n        register('email');\r\n        setValue('email', \"\");\r\n        register('password');\r\n        setValue('password', \"\");\r\n        register('confirmPassword');\r\n        setValue('confirmPassword', \"\");\r\n    }, [register]);\r\n\r\n    const [addUser, { loading }] = useMutation(REGISTER_USER);\r\n\r\n    return (\r\n        <SafeAreaView \r\n            style={styles.container}\r\n        >\r\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n                <KeyboardAwareScrollView>\r\n                    <TextInput \r\n                        style={styles.input}\r\n                        placeholder='First Name'\r\n                        onChangeText={text => {\r\n                            setValue('firstName', text)\r\n                        }}\r\n                        spellCheck={false}\r\n                        autoCorrect={false}\r\n                    />\r\n                    <TextInput \r\n                        style={styles.input}\r\n                        placeholder='Last Name'\r\n                        onChangeText={text => {\r\n                            setValue('lastName', text)\r\n                        }}\r\n                        spellCheck={false}\r\n                        autoCorrect={false}\r\n                    />\r\n                    <RNPickerSelect\r\n                        placeholder={{\r\n                            label: 'Major',\r\n                            value: null,\r\n                            color: '#9EA0A4',\r\n                        }}\r\n                        style={{inputIOS: styles.input}}\r\n                        onValueChange={(value) => setValue('major', value)}\r\n                        items={majorOptions}\r\n                    />\r\n                    <RNPickerSelect\r\n                        placeholder={{\r\n                            label: 'Year',\r\n                            value: null,\r\n                            color: '#9EA0A4',\r\n                        }}\r\n                        style={{inputIOS: styles.input}}\r\n                        onValueChange={(value) => setValue('year', value)}\r\n                        items={yearOptions}\r\n                    />\r\n                    <RNPickerSelect\r\n                        placeholder={{\r\n                            label: 'Graduating this year?',\r\n                            value: null,\r\n                            color: '#9EA0A4',\r\n                        }}\r\n                        style={{inputIOS: styles.input}}\r\n                        onValueChange={(value) => setValue('graduating', value)}\r\n                        items={graduatingOptions}\r\n                    />\r\n                    <RNPickerSelect\r\n                        placeholder={{\r\n                            label: 'Country of Origin',\r\n                            value: null,\r\n                            color: '#9EA0A4',\r\n                        }}\r\n                        style={{inputIOS: styles.input}}\r\n                        onValueChange={(value) => setValue('country', value)}\r\n                        items={countryOptions}\r\n                    />\r\n                    <RNPickerSelect\r\n                        placeholder={{\r\n                            label: 'Ethnicity',\r\n                            value: null,\r\n                            color: '#9EA0A4',\r\n                        }}\r\n                        style={{inputIOS: styles.input}}\r\n                        onValueChange={(value) => setValue('ethnicity', value)}\r\n                        items={ethnicityOptions}\r\n                    />\r\n                    <RNPickerSelect\r\n                        placeholder={{\r\n                            label: 'Sex',\r\n                            value: null,\r\n                            color: '#9EA0A4',\r\n                        }}\r\n                        style={{inputIOS: styles.input}}\r\n                        onValueChange={(value) => setValue('sex', value)}\r\n                        items={sexOptions}\r\n                    />\r\n                    <TextInput \r\n                        style={styles.input}\r\n                        placeholder='Username'\r\n                        onChangeText={text => {\r\n                            setValue('username', text)\r\n                        }}\r\n                        spellCheck={false}\r\n                        autoCorrect={false}\r\n                        autoCapitalize='none'\r\n                    />\r\n                    <TextInput \r\n                        style={styles.input}\r\n                        placeholder='UF/SF Email'\r\n                        onChangeText={text => {\r\n                            setValue('email', text)\r\n                        }}\r\n                        spellCheck={false}\r\n                        autoCorrect={false}\r\n                        autoCapitalize='none'\r\n                    />\r\n                    <TextInput \r\n                        style={styles.input}\r\n                        placeholder='Password'\r\n                        onChangeText={text => {\r\n                            setValue('password', text)\r\n                        }}\r\n                        spellCheck={false}\r\n                        autoCorrect={false}\r\n                        secureTextEntry={true}\r\n                        autoCapitalize='none'\r\n                    />\r\n                    <TextInput \r\n                        style={styles.input}\r\n                        placeholder='Confirm Password'\r\n                        onChangeText={text => {\r\n                            setValue('confirmPassword', text)\r\n                        }}\r\n                        spellCheck={false}\r\n                        autoCorrect={false}\r\n                        secureTextEntry={true}\r\n                        autoCapitalize='none'\r\n                    />\r\n\r\n                    <View>\r\n                        <Button \r\n                            title='Submit'\r\n                            onPress={handleSubmit(onSubmit)}\r\n                        />\r\n                    </View>\r\n                    <View style={{ flex : 1 }} />\r\n                </KeyboardAwareScrollView>\r\n            </TouchableWithoutFeedback>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n        width: 350,\r\n        height: 55,\r\n        backgroundColor: 'white',\r\n        margin: 10,\r\n        padding: 8,\r\n        color: 'black',\r\n        borderRadius: 14,\r\n        fontSize: 18,\r\n        fontWeight: '500',\r\n      },\r\n      container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#42A5F5',\r\n      }\r\n  });\r\n\r\nconst pickerStyles = StyleSheet.create({\r\n    inputIOS: {\r\n        width: 350,\r\n        height: 55,\r\n        backgroundColor: 'white',\r\n        margin: 10,\r\n        padding: 8,\r\n        color: 'black',\r\n        borderRadius: 14,\r\n        fontSize: 18,\r\n        fontWeight: '500',\r\n    },\r\n    inputAndroid: {\r\n        color: 'white'\r\n    }\r\n});\r\n\r\nconst REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $major: String!\r\n    $year: String!\r\n    $graduating: String!\r\n    $country: String!\r\n    $ethnicity: String!\r\n    $sex: String!\r\n    $username: String!\r\n    $email: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n    $listServ: String!\r\n  ) {\r\n    register(\r\n      registerInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        major: $major\r\n        year: $year\r\n        graduating: $graduating\r\n        country: $country\r\n        ethnicity: $ethnicity\r\n        sex: $sex\r\n        username: $username\r\n        email: $email\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n        listServ: $listServ\r\n      }\r\n    ) {\r\n      id\r\n      email\r\n      username\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Register;"]},"metadata":{},"sourceType":"module"}