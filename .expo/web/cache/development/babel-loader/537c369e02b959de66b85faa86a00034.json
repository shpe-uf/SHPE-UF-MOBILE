{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/danielcamejo/Desktop/SHPE-UF-MOBILE/node_modules/react-native-keyboard-aware-scrollview/src/KeyboardAwareListView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport KeyboardAwareBase from \"./KeyboardAwareBase\";\n\nvar KeyboardAwareListView = function (_KeyboardAwareBase) {\n  _inherits(KeyboardAwareListView, _KeyboardAwareBase);\n\n  var _super = _createSuper(KeyboardAwareListView);\n\n  function KeyboardAwareListView() {\n    _classCallCheck(this, KeyboardAwareListView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(KeyboardAwareListView, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var initialOpacity = this.props.startScrolledToBottom ? 0 : 1;\n      return React.createElement(ScrollView, _extends({}, this.props, this.style, {\n        opacity: initialOpacity,\n        contentInset: {\n          bottom: this.state.keyboardHeight\n        },\n        ref: function ref(r) {\n          _this._keyboardAwareView = r;\n        },\n        onLayout: function onLayout(layoutEvent) {\n          _this._onKeyboardAwareViewLayout(layoutEvent.nativeEvent.layout);\n        },\n        onScroll: function onScroll(event) {\n          _this._onKeyboardAwareViewScroll(event.nativeEvent.contentOffset);\n\n          if (_this.props.onScroll) {\n            _this.props.onScroll(event);\n          }\n        },\n        onContentSizeChange: function onContentSizeChange() {\n          _this._updateKeyboardAwareViewContentSize();\n        },\n        scrollEventThrottle: 200,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return KeyboardAwareListView;\n}(KeyboardAwareBase);\n\nexport { KeyboardAwareListView as default };\nKeyboardAwareListView.propTypes = {\n  onScroll: PropTypes.func\n};\nKeyboardAwareListView.defaultProps = _objectSpread({}, KeyboardAwareBase.defaultProps);","map":{"version":3,"sources":["/Users/danielcamejo/Desktop/SHPE-UF-MOBILE/node_modules/react-native-keyboard-aware-scrollview/src/KeyboardAwareListView.js"],"names":["React","PropTypes","KeyboardAwareBase","KeyboardAwareListView","initialOpacity","props","startScrolledToBottom","style","bottom","state","keyboardHeight","r","_keyboardAwareView","layoutEvent","_onKeyboardAwareViewLayout","nativeEvent","layout","event","_onKeyboardAwareViewScroll","contentOffset","onScroll","_updateKeyboardAwareViewContentSize","propTypes","func","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAOA,OAAOC,iBAAP;;IAEqBC,qB;;;;;;;;;;;;;6BACV;AAAA;;AACP,UAAMC,cAAc,GAAG,KAAKC,KAAL,CAAWC,qBAAX,GAAmC,CAAnC,GAAuC,CAA9D;AACA,aACE,oBAAC,UAAD,eAAgB,KAAKD,KAArB,EAAgC,KAAKE,KAArC;AACE,QAAA,OAAO,EAAEH,cADX;AAEE,QAAA,YAAY,EAAE;AAACI,UAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC;AAApB,SAFhB;AAGE,QAAA,GAAG,EAAE,aAACC,CAAD,EAAO;AACV,UAAA,KAAI,CAACC,kBAAL,GAA0BD,CAA1B;AACD,SALH;AAME,QAAA,QAAQ,EAAE,kBAACE,WAAD,EAAiB;AACzB,UAAA,KAAI,CAACC,0BAAL,CAAgCD,WAAW,CAACE,WAAZ,CAAwBC,MAAxD;AACD,SARH;AASE,QAAA,QAAQ,EAAE,kBAACC,KAAD,EAAW;AACnB,UAAA,KAAI,CAACC,0BAAL,CAAgCD,KAAK,CAACF,WAAN,CAAkBI,aAAlD;;AACA,cAAG,KAAI,CAACd,KAAL,CAAWe,QAAd,EAAwB;AACtB,YAAA,KAAI,CAACf,KAAL,CAAWe,QAAX,CAAoBH,KAApB;AACD;AACF,SAdH;AAeE,QAAA,mBAAmB,EAAE,+BAAM;AACzB,UAAA,KAAI,CAACI,mCAAL;AACD,SAjBH;AAkBE,QAAA,mBAAmB,EAAE,GAlBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAsBD;;;;EAzBgDnB,iB;;SAA9BC,qB;AA4BrBA,qBAAqB,CAACmB,SAAtB,GAAkC;AAChCF,EAAAA,QAAQ,EAAEnB,SAAS,CAACsB;AADY,CAAlC;AAIApB,qBAAqB,CAACqB,YAAtB,qBACKtB,iBAAiB,CAACsB,YADvB","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n\nimport {\n  ScrollView\n} from 'react-native';\n\nimport KeyboardAwareBase from './KeyboardAwareBase'\n\nexport default class KeyboardAwareListView extends KeyboardAwareBase {\n  render() {\n    const initialOpacity = this.props.startScrolledToBottom ? 0 : 1;\n    return (\n      <ScrollView {...this.props} {...this.style}\n        opacity={initialOpacity}\n        contentInset={{bottom: this.state.keyboardHeight}}\n        ref={(r) => {\n          this._keyboardAwareView = r;\n        }}\n        onLayout={(layoutEvent) => {\n          this._onKeyboardAwareViewLayout(layoutEvent.nativeEvent.layout);\n        }}\n        onScroll={(event) => {\n          this._onKeyboardAwareViewScroll(event.nativeEvent.contentOffset);\n          if(this.props.onScroll) {\n            this.props.onScroll(event);\n          }\n        }}\n        onContentSizeChange={() => {\n          this._updateKeyboardAwareViewContentSize();\n        }}\n        scrollEventThrottle={200}\n      />\n    );\n  }\n}\n\nKeyboardAwareListView.propTypes = {\n  onScroll: PropTypes.func\n};\n\nKeyboardAwareListView.defaultProps = {\n  ...KeyboardAwareBase.defaultProps\n};"]},"metadata":{},"sourceType":"module"}