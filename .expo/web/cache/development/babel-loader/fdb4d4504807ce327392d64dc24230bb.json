{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/danielcamejo/Desktop/SHPE-UF-MOBILE/assets/UserProfile.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query getUser($userId: ID!) {\\n    getUser(userId: $userId) {\\n      firstName\\n      lastName\\n      photo\\n      username\\n      email\\n      major\\n      year\\n      graduating\\n      country\\n      ethnicity\\n      sex\\n      createdAt\\n      permission\\n      classes\\n      internships\\n      socialMedia\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TestButton from \"./TestButton\";\nimport { useForm, getErrors } from \"../util/hooks\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nfunction UserProfile() {\n  var _this = this;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useQuery = useQuery(FETCH_USER_QUERY, {\n    onError: function onError(err) {\n      console.log(err);\n    },\n    variables: {\n      userId: \"5f90e4d4920bab09f6df0106\"\n    }\n  }),\n      data = _useQuery.data;\n\n  console.log(data);\n\n  if (data && data.getUser != user) {\n    console.log(data.getUser.firstName);\n    setUser(data.getUser);\n  }\n\n  console.log(\"Outputting to console test\");\n  var dataList = [{\n    key: 'Name: '\n  }, {\n    key: 'fakename'\n  }, {\n    key: 'Username:'\n  }, {\n    key: 'fakeusername'\n  }];\n\n  var _renderItem = function _renderItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    var itemStyle = styles.itemStyle,\n        itemText = styles.itemText;\n    return React.createElement(View, {\n      style: itemStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: itemText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, item.key, \" \"));\n  };\n\n  var numColumns = 2;\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"./images/profileBackground.png\"),\n    style: styles.otherContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"MY PROFILE\"), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.otherInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"\\n\", \"INSERT PROFILE PICTURE HERE\", \"\\n\\n\\n\", React.createElement(Text, {\n    style: styles.box1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Name: \"), React.createElement(Text, {\n    style: styles.box1_2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"John Appleseed\"), \"\\n\", React.createElement(Text, {\n    style: styles.box2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Username: \"), React.createElement(Text, {\n    style: styles.box2_2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Jappleseed\"), \"\\n\", \"Name: \", user.firstName + \" \" + user.lastName + \"\\n\", \"Username: \", user.username + \"\\n\", \"Email: \", user.email + \"\\n\", \"Major: \", user.major + \"\\n\", \"Country: \", user.country + \"\\n\", \"Ethnicity: \", user.ethnicity + \"\\n\", \"Sex: \", user.sex + \"\\n\", \"Member since: \", user.createdAt + \"\\n\")), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: dataList,\n    renderItem: _renderItem,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    numColumns: numColumns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }))), React.createElement(TestButton, {\n    text: \"Edit Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  title: {\n    textAlignVertical: 'top',\n    paddingVertical: 30,\n    borderColor: \"#20232a\",\n    borderRadius: 6,\n    color: '#ff8700',\n    textAlign: \"center\",\n    fontSize: 35,\n    fontWeight: \"bold\",\n    hashTag: {\n      fontStyle: 'italic'\n    }\n  },\n  itemStyle: {\n    backgroundColor: '#3232ff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100',\n    flex: 1,\n    margin: 1\n  },\n  itemText: {\n    color: '#fff',\n    fontSize: 23\n  },\n  otherInfo: {\n    flexDirection: 'row',\n    color: '#4a4c4d',\n    fontSize: 23,\n    textAlign: 'left',\n    lineHeight: 23,\n    justifyContent: 'space-between'\n  },\n  container: {\n    backgroundColor: \"#b8e5ff\",\n    alignItems: 'center'\n  },\n  testing: {\n    margin: 0,\n    color: 'gray',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 40,\n    backgroundColor: '#ffffff'\n  },\n  testing: {\n    margin: 0,\n    color: 'ffffff',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 40,\n    backgroundColor: 'gray'\n  },\n  box1: {\n    flexDirection: 'row',\n    color: 'black',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 30,\n    backgroundColor: 'white',\n    flex: 1,\n    flexWrap: 'wrap'\n  },\n  box1_2: {\n    flexDirection: 'row',\n    color: 'black',\n    fontSize: 23,\n    textAlign: 'right',\n    lineHeight: 30,\n    backgroundColor: 'white',\n    justifyContent: '',\n    flex: 1,\n    flexWrap: 'wrap'\n  },\n  box2: {\n    flexDirection: 'row',\n    color: 'black',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 30,\n    backgroundColor: '#e3e8e8',\n    flex: 1,\n    flexWrap: 'wrap'\n  },\n  box2_2: {\n    flexDirection: 'row',\n    color: 'black',\n    fontSize: 23,\n    textAlign: 'right',\n    lineHeight: 30,\n    backgroundColor: '#e3e8e8',\n    flex: 1,\n    flexWrap: 'wrap'\n  }\n});\nvar FETCH_USER_QUERY = gql(_templateObject());\nexport default UserProfile;","map":{"version":3,"sources":["/Users/danielcamejo/Desktop/SHPE-UF-MOBILE/assets/UserProfile.js"],"names":["React","useState","TestButton","useForm","getErrors","useQuery","gql","UserProfile","user","setUser","FETCH_USER_QUERY","onError","err","console","log","variables","userId","data","getUser","firstName","dataList","key","_renderItem","item","index","itemStyle","styles","itemText","numColumns","require","otherContainer","title","container","otherInfo","box1","box1_2","box2","box2_2","lastName","username","email","major","country","ethnicity","sex","createdAt","toString","StyleSheet","create","textAlignVertical","paddingVertical","borderColor","borderRadius","color","textAlign","fontSize","fontWeight","hashTag","fontStyle","backgroundColor","alignItems","justifyContent","height","flex","margin","flexDirection","lineHeight","testing","flexWrap"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;;;AAEA,OAAOC,UAAP;AACA,SAASC,OAAT,EAAkBC,SAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAEA,SAASC,WAAT,GAAsB;AAAA;;AAAA,kBACIN,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,MACbO,IADa;AAAA,MACPC,OADO;;AAAA,kBAELJ,QAAQ,CAACK,gBAAD,EAAmB;AACtCC,IAAAA,OADsC,mBAC9BC,GAD8B,EAC1B;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAHqC;AAItCG,IAAAA,SAAS,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AAJ2B,GAAnB,CAFH;AAAA,MAEbC,IAFa,aAEbA,IAFa;;AAUpBJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;;AAEA,MAAGA,IAAI,IAAIA,IAAI,CAACC,OAAL,IAAgBV,IAA3B,EAAgC;AAC9BK,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACC,OAAL,CAAaC,SAAzB;AACAV,IAAAA,OAAO,CAACQ,IAAI,CAACC,OAAN,CAAP;AACD;;AAEDL,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,MAAMM,QAAQ,GAAG,CAAC;AAACC,IAAAA,GAAG,EAAE;AAAN,GAAD,EAAkB;AAACA,IAAAA,GAAG,EAAE;AAAN,GAAlB,EAAqC;AAACA,IAAAA,GAAG,EAAE;AAAN,GAArC,EAAyD;AAACA,IAAAA,GAAG,EAAE;AAAN,GAAzD,CAAjB;;AAGA,MAAIC,WAAW,GAAG,SAAdA,WAAc,OAAkB;AAAA,QAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,QAAVC,KAAU,QAAVA,KAAU;AAAA,QAC7BC,SAD6B,GACNC,MADM,CAC7BD,SAD6B;AAAA,QAClBE,QADkB,GACND,MADM,CAClBC,QADkB;AAElC,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEE,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBJ,IAAI,CAACF,GAA7B,MADF,CADF;AAKD,GAPD;;AAQA,MAAMO,UAAU,GAAC,CAAjB;AAEE,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAGC,OAAO,kCAAjC;AAAqE,IAAA,KAAK,EAAGH,MAAM,CAACI,cAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACO,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,IADL,iCAEgC,QAFhC,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACQ,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACS,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,EAKK,IALL,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,EAOI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACW,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,EAQK,IARL,YASW7B,IAAI,CAACW,SAAL,GAAiB,GAAjB,GAAuBX,IAAI,CAAC8B,QAA5B,GAAuC,IATlD,gBAUgB9B,IAAI,CAAC+B,QAAL,GAAgB,IAVhC,aAWY/B,IAAI,CAACgC,KAAL,GAAa,IAXzB,aAYYhC,IAAI,CAACiC,KAAL,GAAa,IAZzB,eAacjC,IAAI,CAACkC,OAAL,GAAe,IAb7B,iBAcgBlC,IAAI,CAACmC,SAAL,GAAkB,IAdlC,WAeUnC,IAAI,CAACoC,GAAL,GAAY,IAftB,oBAgBmBpC,IAAI,CAACqC,SAAL,GAAkB,IAhBrC,CADJ,CAFJ,EAsBI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEzB,QADR;AAEE,IAAA,UAAU,EAAEE,WAFd;AAGE,IAAA,YAAY,EAAE,sBAACC,IAAD,EAAOC,KAAP;AAAA,aAAiBA,KAAK,CAACsB,QAAN,EAAjB;AAAA,KAHhB;AAIE,IAAA,UAAU,EAAElB,UAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBJ,CADF,EAgCE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,CADF;AAoCH;;AACD,IAAMF,MAAM,GAAGqB,UAAU,CAACC,MAAX,CAAkB;AAC/BjB,EAAAA,KAAK,EAAC;AACJkB,IAAAA,iBAAiB,EAAE,KADf;AAEJC,IAAAA,eAAe,EAAE,EAFb;AAGJC,IAAAA,WAAW,EAAE,SAHT;AAIJC,IAAAA,YAAY,EAAE,CAJV;AAKJC,IAAAA,KAAK,EAAE,SALH;AAMJC,IAAAA,SAAS,EAAE,QANP;AAOJC,IAAAA,QAAQ,EAAE,EAPN;AAQJC,IAAAA,UAAU,EAAE,MARR;AASJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAAE;AADJ;AATL,GADyB;AAc/BjC,EAAAA,SAAS,EAAC;AACRkC,IAAAA,eAAe,EAAE,SADT;AAERC,IAAAA,UAAU,EAAE,QAFJ;AAGRC,IAAAA,cAAc,EAAE,QAHR;AAIRC,IAAAA,MAAM,EAAE,KAJA;AAKRC,IAAAA,IAAI,EAAE,CALE;AAMRC,IAAAA,MAAM,EAAE;AANA,GAdqB;AAsB/BrC,EAAAA,QAAQ,EAAE;AACR0B,IAAAA,KAAK,EAAE,MADC;AAERE,IAAAA,QAAQ,EAAE;AAFF,GAtBqB;AA0B/BtB,EAAAA,SAAS,EAAE;AACTgC,IAAAA,aAAa,EAAE,KADN;AAGTZ,IAAAA,KAAK,EAAE,SAHE;AAITE,IAAAA,QAAQ,EAAE,EAJD;AAMTD,IAAAA,SAAS,EAAE,MANF;AAOTY,IAAAA,UAAU,EAAE,EAPH;AAQTL,IAAAA,cAAc,EAAE;AARP,GA1BoB;AAoC/B7B,EAAAA,SAAS,EAAE;AACT2B,IAAAA,eAAe,EAAE,SADR;AAITC,IAAAA,UAAU,EAAE;AAJH,GApCoB;AA0C/BO,EAAAA,OAAO,EAAE;AACPH,IAAAA,MAAM,EAAE,CADD;AAEPX,IAAAA,KAAK,EAAE,MAFA;AAGPE,IAAAA,QAAQ,EAAE,EAHH;AAIPC,IAAAA,UAAU,EAAE,MAJL;AAKPF,IAAAA,SAAS,EAAE,MALJ;AAMPY,IAAAA,UAAU,EAAE,EANL;AAOPP,IAAAA,eAAe,EAAE;AAPV,GA1CsB;AAmD/BQ,EAAAA,OAAO,EAAE;AACPH,IAAAA,MAAM,EAAE,CADD;AAEPX,IAAAA,KAAK,EAAE,QAFA;AAGPE,IAAAA,QAAQ,EAAE,EAHH;AAIPC,IAAAA,UAAU,EAAE,MAJL;AAKPF,IAAAA,SAAS,EAAE,MALJ;AAMPY,IAAAA,UAAU,EAAE,EANL;AAOPP,IAAAA,eAAe,EAAE;AAPV,GAnDsB;AA4D/BzB,EAAAA,IAAI,EAAC;AACH+B,IAAAA,aAAa,EAAE,KADZ;AAEHZ,IAAAA,KAAK,EAAE,OAFJ;AAGHE,IAAAA,QAAQ,EAAE,EAHP;AAIHC,IAAAA,UAAU,EAAE,MAJT;AAKHF,IAAAA,SAAS,EAAE,MALR;AAMHY,IAAAA,UAAU,EAAE,EANT;AAOHP,IAAAA,eAAe,EAAC,OAPb;AAQHI,IAAAA,IAAI,EAAE,CARH;AASHK,IAAAA,QAAQ,EAAE;AATP,GA5D0B;AAwE/BjC,EAAAA,MAAM,EAAC;AACL8B,IAAAA,aAAa,EAAE,KADV;AAELZ,IAAAA,KAAK,EAAE,OAFF;AAGLE,IAAAA,QAAQ,EAAE,EAHL;AAILD,IAAAA,SAAS,EAAE,OAJN;AAKLY,IAAAA,UAAU,EAAE,EALP;AAMLP,IAAAA,eAAe,EAAC,OANX;AAOLE,IAAAA,cAAc,EAAE,EAPX;AAQLE,IAAAA,IAAI,EAAE,CARD;AASLK,IAAAA,QAAQ,EAAE;AATL,GAxEwB;AAmF/BhC,EAAAA,IAAI,EAAC;AACH6B,IAAAA,aAAa,EAAE,KADZ;AAEHZ,IAAAA,KAAK,EAAE,OAFJ;AAGHE,IAAAA,QAAQ,EAAE,EAHP;AAIHC,IAAAA,UAAU,EAAE,MAJT;AAKHF,IAAAA,SAAS,EAAE,MALR;AAMHY,IAAAA,UAAU,EAAE,EANT;AAOHP,IAAAA,eAAe,EAAC,SAPb;AAQHI,IAAAA,IAAI,EAAE,CARH;AASHK,IAAAA,QAAQ,EAAE;AATP,GAnF0B;AA8F/B/B,EAAAA,MAAM,EAAC;AACL4B,IAAAA,aAAa,EAAE,KADV;AAELZ,IAAAA,KAAK,EAAE,OAFF;AAGLE,IAAAA,QAAQ,EAAE,EAHL;AAILD,IAAAA,SAAS,EAAE,OAJN;AAKLY,IAAAA,UAAU,EAAE,EALP;AAMLP,IAAAA,eAAe,EAAC,SANX;AAOLI,IAAAA,IAAI,EAAE,CAPD;AAQLK,IAAAA,QAAQ,EAAE;AARL;AA9FwB,CAAlB,CAAf;AA4GA,IAAM1D,gBAAgB,GAAGJ,GAAH,mBAAtB;AAuBA,eAAeC,WAAf","sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, TouchableOpacity, Text, View, ScrollView, ImageBackground, Dimensions, FlatList} from 'react-native';\nimport TestButton from './TestButton';\nimport { useForm, getErrors } from \"../util/hooks\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nfunction UserProfile(){   \n  const [user, setUser] = useState({})\n  const {data} = useQuery(FETCH_USER_QUERY, {\n      onError(err){\n          console.log(err);\n      },\n      variables: {\n          userId: \"5f90e4d4920bab09f6df0106\"\n      }\n  });\n  console.log(data);\n\n  if(data && data.getUser != user){\n    console.log(data.getUser.firstName);\n    setUser(data.getUser);\n  }\n\n  console.log(\"Outputting to console test\");\n  const dataList = [{key: 'Name: '}, {key: 'fakename'}, {key: 'Username:'}, {key: 'fakeusername'}]\n\n\n  let _renderItem = ({item, index}) =>{\n    let {itemStyle, itemText} = styles\n    return(\n      <View style={itemStyle}>\n        <Text style={itemText}>{item.key} </Text>\n      </View>\n    )\n  }\n  const numColumns=2\n\n    return (\n      <ScrollView>\n        <ImageBackground source ={require('./images/profileBackground.png')} style= {styles.otherContainer}>\n            <Text style={styles.title}>MY PROFILE</Text>\n            <View style={styles.container}>\n                <Text style={styles.otherInfo}>     \n                    {\"\\n\"}   \n                    INSERT PROFILE PICTURE HERE{\"\\n\\n\\n\"}\n                    <Text style={styles.box1}>Name: </Text>\n                    <Text style={styles.box1_2}>John Appleseed</Text>\n                    {\"\\n\"}\n                    <Text style={styles.box2}>Username: </Text>\n                    <Text style={styles.box2_2}>Jappleseed</Text>\n                    {\"\\n\"}\n                    Name: {user.firstName + \" \"+  user.lastName + \"\\n\"}\n                    Username: { user.username + \"\\n\" }\n                    Email: {user.email + \"\\n\" }\n                    Major: {user.major + \"\\n\" }\n                    Country: {user.country + \"\\n\"}\n                    Ethnicity: {user.ethnicity  + \"\\n\" }\n                    Sex: {user.sex  + \"\\n\" }\n                    Member since: {user.createdAt  + \"\\n\" }\n                </Text>\n            </View>\n            <View >\n              <FlatList\n                data={dataList}\n                renderItem={_renderItem}\n                keyExtractor={(item, index) => index.toString()}\n                numColumns={numColumns}\n              />\n            </View>\n        </ImageBackground>\n        <TestButton text='Edit Profile' />\n      </ScrollView>\n  )\n}\nconst styles = StyleSheet.create({\n  title:{\n    textAlignVertical: 'top',\n    paddingVertical: 30,\n    borderColor: \"#20232a\",\n    borderRadius: 6,\n    color: '#ff8700',\n    textAlign: \"center\",\n    fontSize: 35,\n    fontWeight: \"bold\",\n    hashTag: {\n      fontStyle: 'italic',\n    },\n  },\n  itemStyle:{\n    backgroundColor: '#3232ff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100',\n    flex: 1,\n    margin: 1\n  },\n  itemText: {\n    color: '#fff',\n    fontSize: 23\n  },\n  otherInfo: {\n    flexDirection: 'row',\n    //margin: 24,\n    color: '#4a4c4d',\n    fontSize: 23,\n    //fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 23,\n    justifyContent: 'space-between',\n  },\n  container: {\n    backgroundColor: \"#b8e5ff\",\n    //paddingVertical: 5,\n    //marginTop: 5,\n    alignItems: 'center',\n  },\n  testing: {\n    margin: 0,\n    color: 'gray',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 40,\n    backgroundColor: '#ffffff',\n  },\n  testing: {\n    margin: 0,\n    color: 'ffffff',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 40,\n    backgroundColor: 'gray',\n  },\n  box1:{\n    flexDirection: 'row',\n    color: 'black',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 30,\n    backgroundColor:'white',\n    flex: 1, \n    flexWrap: 'wrap',\n\n  },\n  box1_2:{\n    flexDirection: 'row',\n    color: 'black',\n    fontSize: 23,\n    textAlign: 'right',\n    lineHeight: 30,\n    backgroundColor:'white',\n    justifyContent: '',\n    flex: 1, \n    flexWrap: 'wrap',\n  },\n  box2:{\n    flexDirection: 'row',\n    color: 'black',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 30,\n    backgroundColor:'#e3e8e8',\n    flex: 1, \n    flexWrap: 'wrap'\n  },\n  box2_2:{\n    flexDirection: 'row',\n    color: 'black',\n    fontSize: 23,\n    textAlign: 'right',\n    lineHeight: 30,\n    backgroundColor:'#e3e8e8',\n    flex: 1, \n    flexWrap: 'wrap',\n  }\n  \n\n})\n\nconst FETCH_USER_QUERY = gql`\n  query getUser($userId: ID!) {\n    getUser(userId: $userId) {\n      firstName\n      lastName\n      photo\n      username\n      email\n      major\n      year\n      graduating\n      country\n      ethnicity\n      sex\n      createdAt\n      permission\n      classes\n      internships\n      socialMedia\n    }\n  }\n`;\n\nexport default UserProfile;\n"]},"metadata":{},"sourceType":"module"}