{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/danielcamejo/Desktop/SHPE-UF-MOBILE/assets/UserProfile.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query getUser($userId: ID!) {\\n    getUser(userId: $userId) {\\n      firstName\\n      lastName\\n      photo\\n      username\\n      email\\n      major\\n      year\\n      graduating\\n      country\\n      ethnicity\\n      sex\\n      createdAt\\n      permission\\n      classes\\n      internships\\n      socialMedia\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TestButton from \"./TestButton\";\nimport { useForm, getErrors } from \"../util/hooks\";\nimport { useQuery, gql } from \"@apollo/client\";\nvar numColumns = 3;\n\nfunction UserProfile() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useQuery = useQuery(FETCH_USER_QUERY, {\n    onError: function onError(err) {\n      console.log(err);\n    },\n    variables: {\n      userId: \"5f90e4d4920bab09f6df0106\"\n    }\n  }),\n      data = _useQuery.data;\n\n  console.log(data);\n\n  if (data && data.getUser != user) {\n    console.log(data.getUser.firstName);\n    setUser(data.getUser);\n  }\n\n  console.log(\"Outputting to console test\");\n  return React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(ImageBackground, {\n    source: require(\"./images/profileBackground.png\"),\n    style: styles.otherContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"MY PROFILE\"), React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.otherInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"\\n\", \"INSERT PROFILE PICTURE HERE\", \"\\n\\n\\n\", React.createElement(Text, {\n    style: styles.box1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"Name: \"), React.createElement(Text, {\n    style: styles.box1_2,\n    John: true,\n    Appleseed: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 60\n    }\n  }), \"Name: \", user.firstName + \" \" + user.lastName + \"\\n\", \"Username: \", user.username + \"\\n\", \"Email: \", user.email + \"\\n\", \"Major: \", user.major + \"\\n\", \"Country: \", user.country + \"\\n\", \"Ethnicity: \", user.ethnicity + \"\\n\", \"Sex: \", user.sex + \"\\n\", \"Member since: \", user.createdAt + \"\\n\"))), React.createElement(TestButton, {\n    text: \"Edit Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  title: {\n    textAlignVertical: 'top',\n    paddingVertical: 30,\n    borderColor: \"#20232a\",\n    borderRadius: 6,\n    color: \"white\",\n    textAlign: \"center\",\n    fontSize: 35,\n    fontWeight: \"bold\",\n    hashTag: {\n      fontStyle: 'italic'\n    }\n  },\n  otherInfo: {\n    flexDirection: 'row',\n    margin: 24,\n    color: '#4a4c4d',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 40\n  },\n  container: {\n    backgroundColor: \"#b8e5ff\",\n    paddingVertical: 5,\n    marginTop: 5,\n    alignItems: 'center'\n  },\n  testing: {\n    margin: 0,\n    color: 'gray',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 40,\n    backgroundColor: '#ffffff'\n  },\n  testing: {\n    margin: 0,\n    color: 'ffffff',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 40,\n    backgroundColor: 'gray'\n  },\n  box1: {\n    flexDirection: 'row',\n    color: 'black',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 40,\n    backgroundColor: 'white'\n  },\n  box1_2: {\n    flexDirection: 'row',\n    color: 'black',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 40,\n    backgroundColor: 'white'\n  }\n});\nvar FETCH_USER_QUERY = gql(_templateObject());\nexport default UserProfile;","map":{"version":3,"sources":["/Users/danielcamejo/Desktop/SHPE-UF-MOBILE/assets/UserProfile.js"],"names":["React","useState","TestButton","useForm","getErrors","useQuery","gql","numColumns","UserProfile","user","setUser","FETCH_USER_QUERY","onError","err","console","log","variables","userId","data","getUser","firstName","require","styles","otherContainer","title","container","otherInfo","box1","box1_2","lastName","username","email","major","country","ethnicity","sex","createdAt","StyleSheet","create","textAlignVertical","paddingVertical","borderColor","borderRadius","color","textAlign","fontSize","fontWeight","hashTag","fontStyle","flexDirection","margin","lineHeight","backgroundColor","marginTop","alignItems","testing"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;;;;AAEA,OAAOC,UAAP;AACA,SAASC,OAAT,EAAkBC,SAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AAGA,IAAMC,UAAU,GAAG,CAAnB;;AAEA,SAASC,WAAT,GAAsB;AAAA,kBACIP,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,MACbQ,IADa;AAAA,MACPC,OADO;;AAAA,kBAELL,QAAQ,CAACM,gBAAD,EAAmB;AACtCC,IAAAA,OADsC,mBAC9BC,GAD8B,EAC1B;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAHqC;AAItCG,IAAAA,SAAS,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AAJ2B,GAAnB,CAFH;AAAA,MAEbC,IAFa,aAEbA,IAFa;;AAUpBJ,EAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;;AAEA,MAAGA,IAAI,IAAIA,IAAI,CAACC,OAAL,IAAgBV,IAA3B,EAAgC;AAC9BK,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACC,OAAL,CAAaC,SAAzB;AACAV,IAAAA,OAAO,CAACQ,IAAI,CAACC,OAAN,CAAP;AACD;;AAEDL,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACE,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAGM,OAAO,kCAAjC;AAAqE,IAAA,KAAK,EAAGC,MAAM,CAACC,cAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,IADL,iCAEgC,QAFhC,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,EAG2C,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,MAApB;AAA4B,IAAA,IAAI,MAAhC;AAAiC,IAAA,SAAS,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAH3C,YAIWnB,IAAI,CAACW,SAAL,GAAiB,GAAjB,GAAuBX,IAAI,CAACoB,QAA5B,GAAuC,IAJlD,gBAKgBpB,IAAI,CAACqB,QAAL,GAAgB,IALhC,aAMYrB,IAAI,CAACsB,KAAL,GAAa,IANzB,aAOYtB,IAAI,CAACuB,KAAL,GAAa,IAPzB,eAQcvB,IAAI,CAACwB,OAAL,GAAe,IAR7B,iBASgBxB,IAAI,CAACyB,SAAL,GAAkB,IATlC,WAUUzB,IAAI,CAAC0B,GAAL,GAAY,IAVtB,oBAWmB1B,IAAI,CAAC2B,SAAL,GAAkB,IAXrC,CADJ,CAFJ,CADF,EAmBE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AAuBH;;AACD,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC/Bd,EAAAA,KAAK,EAAC;AACJe,IAAAA,iBAAiB,EAAE,KADf;AAEJC,IAAAA,eAAe,EAAE,EAFb;AAGJC,IAAAA,WAAW,EAAE,SAHT;AAIJC,IAAAA,YAAY,EAAE,CAJV;AAKJC,IAAAA,KAAK,EAAE,OALH;AAMJC,IAAAA,SAAS,EAAE,QANP;AAOJC,IAAAA,QAAQ,EAAE,EAPN;AAQJC,IAAAA,UAAU,EAAE,MARR;AASJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAS,EAAE;AADJ;AATL,GADyB;AAc/BtB,EAAAA,SAAS,EAAE;AACTuB,IAAAA,aAAa,EAAE,KADN;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTP,IAAAA,KAAK,EAAE,SAHE;AAITE,IAAAA,QAAQ,EAAE,EAJD;AAKTC,IAAAA,UAAU,EAAE,MALH;AAMTF,IAAAA,SAAS,EAAE,MANF;AAOTO,IAAAA,UAAU,EAAE;AAPH,GAdoB;AAuB/B1B,EAAAA,SAAS,EAAE;AACT2B,IAAAA,eAAe,EAAE,SADR;AAETZ,IAAAA,eAAe,EAAE,CAFR;AAGTa,IAAAA,SAAS,EAAE,CAHF;AAITC,IAAAA,UAAU,EAAE;AAJH,GAvBoB;AA6B/BC,EAAAA,OAAO,EAAE;AACPL,IAAAA,MAAM,EAAE,CADD;AAEPP,IAAAA,KAAK,EAAE,MAFA;AAGPE,IAAAA,QAAQ,EAAE,EAHH;AAIPC,IAAAA,UAAU,EAAE,MAJL;AAKPF,IAAAA,SAAS,EAAE,MALJ;AAMPO,IAAAA,UAAU,EAAE,EANL;AAOPC,IAAAA,eAAe,EAAE;AAPV,GA7BsB;AAsC/BG,EAAAA,OAAO,EAAE;AACPL,IAAAA,MAAM,EAAE,CADD;AAEPP,IAAAA,KAAK,EAAE,QAFA;AAGPE,IAAAA,QAAQ,EAAE,EAHH;AAIPC,IAAAA,UAAU,EAAE,MAJL;AAKPF,IAAAA,SAAS,EAAE,MALJ;AAMPO,IAAAA,UAAU,EAAE,EANL;AAOPC,IAAAA,eAAe,EAAE;AAPV,GAtCsB;AA+C/BzB,EAAAA,IAAI,EAAC;AACHsB,IAAAA,aAAa,EAAE,KADZ;AAEHN,IAAAA,KAAK,EAAE,OAFJ;AAGHE,IAAAA,QAAQ,EAAE,EAHP;AAIHC,IAAAA,UAAU,EAAE,MAJT;AAKHF,IAAAA,SAAS,EAAE,MALR;AAMHO,IAAAA,UAAU,EAAE,EANT;AAOHC,IAAAA,eAAe,EAAC;AAPb,GA/C0B;AAwD/BxB,EAAAA,MAAM,EAAC;AACLqB,IAAAA,aAAa,EAAE,KADV;AAELN,IAAAA,KAAK,EAAE,OAFF;AAGLE,IAAAA,QAAQ,EAAE,EAHL;AAILC,IAAAA,UAAU,EAAE,MAJP;AAKLF,IAAAA,SAAS,EAAE,MALN;AAMLO,IAAAA,UAAU,EAAE,EANP;AAOLC,IAAAA,eAAe,EAAC;AAPX;AAxDwB,CAAlB,CAAf;AAoEA,IAAMzC,gBAAgB,GAAGL,GAAH,mBAAtB;AAuBA,eAAeE,WAAf","sourcesContent":["import React, {useState} from 'react';\nimport { StyleSheet, TouchableOpacity, Text, View, ScrollView, ImageBackground, Dimensions} from 'react-native';\nimport TestButton from './TestButton';\nimport { useForm, getErrors } from \"../util/hooks\";\nimport { useQuery, gql } from \"@apollo/client\";\n\n\nconst numColumns = 3;\n\nfunction UserProfile(){   \n  const [user, setUser] = useState({})\n  const {data} = useQuery(FETCH_USER_QUERY, {\n      onError(err){\n          console.log(err);\n      },\n      variables: {\n          userId: \"5f90e4d4920bab09f6df0106\"\n      }\n  });\n  console.log(data);\n\n  if(data && data.getUser != user){\n    console.log(data.getUser.firstName);\n    setUser(data.getUser);\n  }\n\n  console.log(\"Outputting to console test\");\n    return (\n      <ScrollView>\n        <ImageBackground source ={require('./images/profileBackground.png')} style= {styles.otherContainer}>\n            <Text style={styles.title}>MY PROFILE</Text>\n            <View style={styles.container}>\n                <Text style={styles.otherInfo}>     \n                    {\"\\n\"}   \n                    INSERT PROFILE PICTURE HERE{\"\\n\\n\\n\"}\n                    <Text style={styles.box1}>Name: </Text><Text style={styles.box1_2} John Appleseed></Text>\n                    Name: {user.firstName + \" \"+  user.lastName + \"\\n\"}\n                    Username: { user.username + \"\\n\" }\n                    Email: {user.email + \"\\n\" }\n                    Major: {user.major + \"\\n\" }\n                    Country: {user.country + \"\\n\"}\n                    Ethnicity: {user.ethnicity  + \"\\n\" }\n                    Sex: {user.sex  + \"\\n\" }\n                    Member since: {user.createdAt  + \"\\n\" }\n                </Text>\n            </View>\n        </ImageBackground>\n        <TestButton text='Edit Profile' />\n      </ScrollView>\n  )\n}\nconst styles = StyleSheet.create({\n  title:{\n    textAlignVertical: 'top',\n    paddingVertical: 30,\n    borderColor: \"#20232a\",\n    borderRadius: 6,\n    color: \"white\",\n    textAlign: \"center\",\n    fontSize: 35,\n    fontWeight: \"bold\",\n    hashTag: {\n      fontStyle: 'italic',\n    },\n  },\n  otherInfo: {\n    flexDirection: 'row',\n    margin: 24,\n    color: '#4a4c4d',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 40,\n  },\n  container: {\n    backgroundColor: \"#b8e5ff\",\n    paddingVertical: 5,\n    marginTop: 5,\n    alignItems: 'center',\n  },\n  testing: {\n    margin: 0,\n    color: 'gray',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 40,\n    backgroundColor: '#ffffff',\n  },\n  testing: {\n    margin: 0,\n    color: 'ffffff',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 40,\n    backgroundColor: 'gray',\n  },\n  box1:{\n    flexDirection: 'row',\n    color: 'black',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 40,\n    backgroundColor:'white',\n  },\n  box1_2:{\n    flexDirection: 'row',\n    color: 'black',\n    fontSize: 23,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    lineHeight: 40,\n    backgroundColor:'white'\n  },\n\n})\n\nconst FETCH_USER_QUERY = gql`\n  query getUser($userId: ID!) {\n    getUser(userId: $userId) {\n      firstName\n      lastName\n      photo\n      username\n      email\n      major\n      year\n      graduating\n      country\n      ethnicity\n      sex\n      createdAt\n      permission\n      classes\n      internships\n      socialMedia\n    }\n  }\n`;\n\nexport default UserProfile;\n"]},"metadata":{},"sourceType":"module"}