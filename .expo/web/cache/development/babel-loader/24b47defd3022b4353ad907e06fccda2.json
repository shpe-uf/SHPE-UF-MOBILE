{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\SHPE-UF-MOBILE\\\\Pages\\\\viewTasks.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query getUser($userId: ID!) {\\n    getUser(userId: $userId) {\\n      firstName\\n      lastName\\n      points\\n      fallPoints\\n      springPoints\\n      summerPoints\\n      fallPercentile\\n      springPercentile\\n      summerPercentile\\n      events {\\n        name\\n        category\\n        createdAt\\n        points\\n      }\\n      tasks {\\n        name\\n        points\\n        startDate\\n      }\\n      bookmarkedTasks\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\nimport { useForm, getErrors } from \"../util/hooks\";\n\nfunction Tasks() {\n  var _useQuery = useQuery(FETCH_USER_QUERY, {\n    variables: {\n      username: \"5f90e4d4920bab09f6df0106\"\n    }\n  }),\n      data = _useQuery.data;\n\n  if (data) {\n    var user = data.getUser;\n    console.log(user);\n  }\n\n  var titleText = useState(\"Name of Task\");\n  var bodyText = useState(\"Task's Points\");\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: Keyboard.dismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, React.createElement(KeyboardAwareScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, titleText, \"\\n\", \"\\n\"), React.createElement(Text, {\n    numberOfLines: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, bodyText))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#42A5F5',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    backgroundColor: 'white',\n    color: \"black\",\n    borderRadius: 14,\n    padding: 8,\n    margin: 10,\n    width: 350,\n    height: 55,\n    fontSize: 18\n  },\n  wording: {\n    fontSize: 20,\n    color: 'black'\n  }\n});\nvar FETCH_USER_QUERY = gql(_templateObject());\nexport default Tasks;","map":{"version":3,"sources":["C:/Users/hp/Desktop/SHPE-UF-MOBILE/Pages/viewTasks.js"],"names":["React","useState","KeyboardAwareScrollView","useMutation","useQuery","gql","useForm","getErrors","Tasks","FETCH_USER_QUERY","variables","username","data","user","getUser","console","log","titleText","bodyText","styles","container","Keyboard","dismiss","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","input","borderWidth","color","borderRadius","padding","margin","width","height","fontSize","wording"],"mappings":";;;;;;;;;;;;;AAAA,OAAQA,KAAR,IAAgBC,QAAhB,QAA+B,OAA/B;;;;;;;;;AAEA,SAASC,uBAAT,QAAwC,wCAAxC;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,GAAhC,QAA2C,gBAA3C;AACA,SAASC,OAAT,EAAkBC,SAAlB;;AAEA,SAASC,KAAT,GAAiB;AAAA,kBAIIJ,QAAQ,CAACK,gBAAD,EAAmB;AACxCC,IAAAA,SAAS,EAAE;AACTC,MAAAA,QAAQ,EAAE;AADD;AAD6B,GAAnB,CAJZ;AAAA,MAILC,IAJK,aAILA,IAJK;;AASX,MAAGA,IAAH,EAAQ;AACN,QAAIC,IAAI,GAAGD,IAAI,CAACE,OAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD;;AACD,MAAMI,SAAS,GAAGhB,QAAQ,CAAC,cAAD,CAA1B;AACA,MAAMiB,QAAQ,GAAGjB,QAAQ,CAAC,eAAD,CAAzB;AAGF,SACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAGkB,MAAM,CAACC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,wBAAD;AAA0B,IAAA,OAAO,EAAEC,QAAQ,CAACC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACF,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCA,SADD,EAEC,IAFD,EAGC,IAHD,CADJ,EAMI,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAE,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBC,QAAzB,CANJ,CADJ,CADJ,CADJ;AAcH;;AAED,IAAMC,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,SAAS,EAAE;AACPK,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,SAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT,GADkB;AAO7BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,WAAW,EAAE,CADV;AAEHJ,IAAAA,eAAe,EAAE,OAFd;AAGHK,IAAAA,KAAK,EAAE,OAHJ;AAIHC,IAAAA,YAAY,EAAE,EAJX;AAKHC,IAAAA,OAAO,EAAE,CALN;AAMHC,IAAAA,MAAM,EAAE,EANL;AAOHC,IAAAA,KAAK,EAAE,GAPJ;AAQHC,IAAAA,MAAM,EAAE,EARL;AASHC,IAAAA,QAAQ,EAAE;AATP,GAPsB;AAkB7BC,EAAAA,OAAO,EAAE;AACLD,IAAAA,QAAQ,EAAE,EADL;AAELN,IAAAA,KAAK,EAAE;AAFF;AAlBoB,CAAlB,CAAf;AAwBA,IAAMtB,gBAAgB,GAAGJ,GAAH,mBAAtB;AA4BA,eAAeG,KAAf","sourcesContent":["import  React, {useState} from 'react';\r\nimport { TouchableWithoutFeedback, TextInput, StyleSheet, SafeAreaView, Keyboard, Button, Alert, Text } from 'react-native';\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scrollview';\r\nimport { useMutation, useQuery, gql } from \"@apollo/client\";\r\nimport { useForm, getErrors } from \"../util/hooks\";\r\n\r\nfunction Tasks() {\r\n\r\n\r\n\r\n      let { data } = useQuery(FETCH_USER_QUERY, {\r\n        variables: {\r\n          username: \"5f90e4d4920bab09f6df0106\", // dummy user for now\r\n        },\r\n      });\r\n      if(data){\r\n        let user = data.getUser;\r\n        console.log(user);\r\n      }\r\n      const titleText = useState(\"Name of Task\")\r\n      const bodyText = useState(\"Task's Points\")\r\n\r\n\r\n    return (\r\n        <SafeAreaView style ={styles.container}>\r\n            <TouchableWithoutFeedback onPress={Keyboard.dismiss}>\r\n                <KeyboardAwareScrollView>\r\n                    <Text style={styles.titleText}>\r\n                    {titleText}\r\n                    {\"\\n\"}\r\n                    {\"\\n\"}\r\n                    </Text>\r\n                    <Text numberOfLines={5}>{bodyText}</Text>\r\n                </KeyboardAwareScrollView>\r\n            </TouchableWithoutFeedback>\r\n        </SafeAreaView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#42A5F5',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    input: {\r\n        borderWidth: 1,\r\n        backgroundColor: 'white',\r\n        color: \"black\",\r\n        borderRadius: 14,\r\n        padding: 8,\r\n        margin: 10,\r\n        width: 350,\r\n        height: 55,\r\n        fontSize: 18,\r\n    },\r\n    wording: {\r\n        fontSize: 20,\r\n        color: 'black',\r\n    },\r\n});\r\n\r\nconst FETCH_USER_QUERY = gql`\r\n  query getUser($userId: ID!) {\r\n    getUser(userId: $userId) {\r\n      firstName\r\n      lastName\r\n      points\r\n      fallPoints\r\n      springPoints\r\n      summerPoints\r\n      fallPercentile\r\n      springPercentile\r\n      summerPercentile\r\n      events {\r\n        name\r\n        category\r\n        createdAt\r\n        points\r\n      }\r\n      tasks {\r\n        name\r\n        points\r\n        startDate\r\n      }\r\n      bookmarkedTasks\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Tasks;\r\n"]},"metadata":{},"sourceType":"module"}